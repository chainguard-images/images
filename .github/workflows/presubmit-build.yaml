on:
  pull_request:

concurrency:
  group: presubmit-build-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  presubmit-matrix:
    runs-on: ubuntu-latest
    outputs:
      shard-0: ${{ steps.generate-matrix-0.outputs.matrix }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2

      - run: terraform fmt -check -recursive -diff
      - run: ./lint.sh
      - name: Enforce YAML formatting
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest@sha256:5ec18252632ae0c91c05503e5876e80c9f566f5e57a5c43d360f7b03f157cae3
        with:
          entrypoint: wolfictl
          args: lint yam images/

      - id: files
        uses: tj-actions/changed-files@e1754a427f478b8778d349341b8f1d80f1f47f44 # v36.4.0
        with:
          separator: ','
      - id: generate-matrix-0
        uses: ./.github/actions/generate-matrix
        with:
          shard: 0
          sharding-factor: 1
          modified-files: ${{ steps.files.outputs.all_changed_files }}

  presubmit-build-0:
    runs-on: ubuntu-latest
    needs: presubmit-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.presubmit-matrix.outputs.shard-0) }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Add additional inputs
        id: augmented-inputs
        uses: chainguard-dev/actions/matrix-extra-inputs@main
        with:
          matrix-json: ${{ toJSON(matrix) }}

      - uses: chainguard-dev/actions/setup-k3d@main
        with:
          k3s-image: cgr.dev/chainguard/k3s:latest@sha256:fb45446042c7dd5750321e08e9e4b1474866cdc2d9a2eb12582c566e799c985b

      # Disable version tags.
      - run: |
          echo "TF_APKO_DISABLE_VERSION_TAGS=true" >> $GITHUB_ENV

      - uses: ./.github/actions/build-image-terraform
        with: ${{ fromJSON(steps.augmented-inputs.outputs.matrix-json) }}

      - name: Collect diagnostics and upload
        if: ${{ failure() }}
        uses: chainguard-dev/actions/k8s-diag@main
        with:
          cluster-type: k3d
          namespace-resources: pods,svc,deploy,sts,daemonset,configmaps
          artifact-name: ${{ matrix.imageName }}-diagnostics

  presubmit-roundup:
    needs:
      - presubmit-build-0
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5 # v3.0.3

      - if: ${{ env.WORKFLOW_CONCLUSION == 'success' }}
        working-directory: /tmp
        run: echo ${{ env.WORKFLOW_CONCLUSION }} && exit 0

      - if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
        working-directory: /tmp
        run: echo ${{ env.WORKFLOW_CONCLUSION }} && exit 1
