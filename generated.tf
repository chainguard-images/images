# DO NOT EDIT - this file is autogenerated by tfgen

module "apko" {
  scratch_repository = local.scratch_repository
  source             = "./images/apko"
  target_repository  = "${var.target_repository}/apko"
  test_repository    = var.test_repository
}

module "aspnet-runtime" {
  scratch_repository = local.scratch_repository
  source             = "./images/aspnet-runtime"
  target_repository  = "${var.target_repository}/aspnet-runtime"
  test_repository    = var.test_repository
}

module "bash" {
  scratch_repository = local.scratch_repository
  source             = "./images/bash"
  target_repository  = "${var.target_repository}/bash"
  test_repository    = var.test_repository
}

module "busybox" {
  scratch_repository = local.scratch_repository
  source             = "./images/busybox"
  target_repository  = "${var.target_repository}/busybox"
  test_repository    = var.test_repository
}

module "cosign" {
  scratch_repository = local.scratch_repository
  source             = "./images/cosign"
  target_repository  = "${var.target_repository}/cosign"
  test_repository    = var.test_repository
}

module "crane" {
  scratch_repository = local.scratch_repository
  source             = "./images/crane"
  target_repository  = "${var.target_repository}/crane"
  test_repository    = var.test_repository
}

module "curl" {
  scratch_repository = local.scratch_repository
  source             = "./images/curl"
  target_repository  = "${var.target_repository}/curl"
  test_repository    = var.test_repository
}

module "dfc" {
  scratch_repository = local.scratch_repository
  source             = "./images/dfc"
  target_repository  = "${var.target_repository}/dfc"
  test_repository    = var.test_repository
}

module "dive" {
  scratch_repository = local.scratch_repository
  source             = "./images/dive"
  target_repository  = "${var.target_repository}/dive"
  test_repository    = var.test_repository
}

module "docker-dind" {
  scratch_repository = local.scratch_repository
  source             = "./images/docker-dind"
  target_repository  = "${var.target_repository}/docker-dind"
  test_repository    = var.test_repository
}

module "dotnet" {
  scratch_repository = local.scratch_repository
  source             = "./images/dotnet"
  target_repository  = "${var.target_repository}/dotnet"
  test_repository    = var.test_repository
}

module "gcc-glibc" {
  scratch_repository = local.scratch_repository
  source             = "./images/gcc-glibc"
  target_repository  = "${var.target_repository}/gcc-glibc"
  test_repository    = var.test_repository
}

module "git" {
  scratch_repository = local.scratch_repository
  source             = "./images/git"
  target_repository  = "${var.target_repository}/git"
  test_repository    = var.test_repository
}

module "glibc-dynamic" {
  scratch_repository = local.scratch_repository
  source             = "./images/glibc-dynamic"
  target_repository  = "${var.target_repository}/glibc-dynamic"
  test_repository    = var.test_repository
}

module "go" {
  scratch_repository = local.scratch_repository
  source             = "./images/go"
  target_repository  = "${var.target_repository}/go"
  test_repository    = var.test_repository
}

module "gradle" {
  scratch_repository = local.scratch_repository
  source             = "./images/gradle"
  target_repository  = "${var.target_repository}/gradle"
  test_repository    = var.test_repository
}

module "grype" {
  scratch_repository = local.scratch_repository
  source             = "./images/grype"
  target_repository  = "${var.target_repository}/grype"
  test_repository    = var.test_repository
}

module "haproxy" {
  scratch_repository = local.scratch_repository
  source             = "./images/haproxy"
  target_repository  = "${var.target_repository}/haproxy"
  test_repository    = var.test_repository
}

module "helm" {
  scratch_repository = local.scratch_repository
  source             = "./images/helm"
  target_repository  = "${var.target_repository}/helm"
  test_repository    = var.test_repository
}

module "hugo" {
  scratch_repository = local.scratch_repository
  source             = "./images/hugo"
  target_repository  = "${var.target_repository}/hugo"
  test_repository    = var.test_repository
}

module "jdk" {
  scratch_repository = local.scratch_repository
  source             = "./images/jdk"
  target_repository  = "${var.target_repository}/jdk"
  test_repository    = var.test_repository
}

module "jre" {
  scratch_repository = local.scratch_repository
  source             = "./images/jre"
  target_repository  = "${var.target_repository}/jre"
  test_repository    = var.test_repository
}

module "k3s" {
  scratch_repository = local.scratch_repository
  source             = "./images/k3s"
  target_repository  = "${var.target_repository}/k3s"
  test_repository    = var.test_repository
}

module "ko" {
  scratch_repository = local.scratch_repository
  source             = "./images/ko"
  target_repository  = "${var.target_repository}/ko"
  test_repository    = var.test_repository
}

module "kubectl" {
  scratch_repository = local.scratch_repository
  source             = "./images/kubectl"
  target_repository  = "${var.target_repository}/kubectl"
  test_repository    = var.test_repository
}

module "laravel" {
  scratch_repository = local.scratch_repository
  source             = "./images/laravel"
  target_repository  = "${var.target_repository}/laravel"
  test_repository    = var.test_repository
}

module "malcontent" {
  scratch_repository = local.scratch_repository
  source             = "./images/malcontent"
  target_repository  = "${var.target_repository}/malcontent"
  test_repository    = var.test_repository
}

module "mariadb" {
  scratch_repository = local.scratch_repository
  source             = "./images/mariadb"
  target_repository  = "${var.target_repository}/mariadb"
  test_repository    = var.test_repository
}

module "maven" {
  scratch_repository = local.scratch_repository
  source             = "./images/maven"
  target_repository  = "${var.target_repository}/maven"
  test_repository    = var.test_repository
}

module "melange" {
  scratch_repository = local.scratch_repository
  source             = "./images/melange"
  target_repository  = "${var.target_repository}/melange"
  test_repository    = var.test_repository
}

module "min-toolkit-debug" {
  scratch_repository = local.scratch_repository
  source             = "./images/min-toolkit-debug"
  target_repository  = "${var.target_repository}/min-toolkit-debug"
  test_repository    = var.test_repository
}

module "minio" {
  scratch_repository = local.scratch_repository
  source             = "./images/minio"
  target_repository  = "${var.target_repository}/minio"
  test_repository    = var.test_repository
}

module "mongodb" {
  scratch_repository = local.scratch_repository
  source             = "./images/mongodb"
  target_repository  = "${var.target_repository}/mongodb"
  test_repository    = var.test_repository
}

module "nginx" {
  scratch_repository = local.scratch_repository
  source             = "./images/nginx"
  target_repository  = "${var.target_repository}/nginx"
  test_repository    = var.test_repository
}

module "node" {
  scratch_repository = local.scratch_repository
  source             = "./images/node"
  target_repository  = "${var.target_repository}/node"
  test_repository    = var.test_repository
}

module "openscap" {
  scratch_repository = local.scratch_repository
  source             = "./images/openscap"
  target_repository  = "${var.target_repository}/openscap"
  test_repository    = var.test_repository
}

module "opentelemetry-collector-contrib" {
  scratch_repository = local.scratch_repository
  source             = "./images/opentelemetry-collector-contrib"
  target_repository  = "${var.target_repository}/opentelemetry-collector-contrib"
  test_repository    = var.test_repository
}

module "php" {
  scratch_repository = local.scratch_repository
  source             = "./images/php"
  target_repository  = "${var.target_repository}/php"
  test_repository    = var.test_repository
}

module "postgres" {
  scratch_repository = local.scratch_repository
  source             = "./images/postgres"
  target_repository  = "${var.target_repository}/postgres"
  test_repository    = var.test_repository
}

module "python" {
  scratch_repository = local.scratch_repository
  source             = "./images/python"
  target_repository  = "${var.target_repository}/python"
  test_repository    = var.test_repository
}

module "pytorch" {
  scratch_repository = local.scratch_repository
  source             = "./images/pytorch"
  target_repository  = "${var.target_repository}/pytorch"
  test_repository    = var.test_repository
}

module "redis" {
  scratch_repository = local.scratch_repository
  source             = "./images/redis"
  target_repository  = "${var.target_repository}/redis"
  test_repository    = var.test_repository
}

module "ruby" {
  scratch_repository = local.scratch_repository
  source             = "./images/ruby"
  target_repository  = "${var.target_repository}/ruby"
  test_repository    = var.test_repository
}

module "rust" {
  scratch_repository = local.scratch_repository
  source             = "./images/rust"
  target_repository  = "${var.target_repository}/rust"
  test_repository    = var.test_repository
}

module "static" {
  scratch_repository = local.scratch_repository
  source             = "./images/static"
  target_repository  = "${var.target_repository}/static"
  test_repository    = var.test_repository
}

module "stunnel" {
  scratch_repository = local.scratch_repository
  source             = "./images/stunnel"
  target_repository  = "${var.target_repository}/stunnel"
  test_repository    = var.test_repository
}

module "tomcat" {
  scratch_repository = local.scratch_repository
  source             = "./images/tomcat"
  target_repository  = "${var.target_repository}/tomcat"
  test_repository    = var.test_repository
}

module "valkey" {
  scratch_repository = local.scratch_repository
  source             = "./images/valkey"
  target_repository  = "${var.target_repository}/valkey"
  test_repository    = var.test_repository
}

module "wait-for-it" {
  scratch_repository = local.scratch_repository
  source             = "./images/wait-for-it"
  target_repository  = "${var.target_repository}/wait-for-it"
  test_repository    = var.test_repository
}

module "wolfi-base" {
  scratch_repository = local.scratch_repository
  source             = "./images/wolfi-base"
  target_repository  = "${var.target_repository}/wolfi-base"
  test_repository    = var.test_repository
}

module "wordpress" {
  scratch_repository = local.scratch_repository
  source             = "./images/wordpress"
  target_repository  = "${var.target_repository}/wordpress"
  test_repository    = var.test_repository
}

output "summary_apko" {
  value = module.apko.summary
}

output "summary_aspnet-runtime" {
  value = module.aspnet-runtime.summary
}

output "summary_bash" {
  value = module.bash.summary
}

output "summary_busybox" {
  value = module.busybox.summary
}

output "summary_cosign" {
  value = module.cosign.summary
}

output "summary_crane" {
  value = module.crane.summary
}

output "summary_curl" {
  value = module.curl.summary
}

output "summary_dfc" {
  value = module.dfc.summary
}

output "summary_dive" {
  value = module.dive.summary
}

output "summary_docker-dind" {
  value = module.docker-dind.summary
}

output "summary_dotnet" {
  value = module.dotnet.summary
}

output "summary_gcc-glibc" {
  value = module.gcc-glibc.summary
}

output "summary_git" {
  value = module.git.summary
}

output "summary_glibc-dynamic" {
  value = module.glibc-dynamic.summary
}

output "summary_go" {
  value = module.go.summary
}

output "summary_gradle" {
  value = module.gradle.summary
}

output "summary_grype" {
  value = module.grype.summary
}

output "summary_haproxy" {
  value = module.haproxy.summary
}

output "summary_helm" {
  value = module.helm.summary
}

output "summary_hugo" {
  value = module.hugo.summary
}

output "summary_jdk" {
  value = module.jdk.summary
}

output "summary_jre" {
  value = module.jre.summary
}

output "summary_k3s" {
  value = module.k3s.summary
}

output "summary_ko" {
  value = module.ko.summary
}

output "summary_kubectl" {
  value = module.kubectl.summary
}

output "summary_laravel" {
  value = module.laravel.summary
}

output "summary_malcontent" {
  value = module.malcontent.summary
}

output "summary_mariadb" {
  value = module.mariadb.summary
}

output "summary_maven" {
  value = module.maven.summary
}

output "summary_melange" {
  value = module.melange.summary
}

output "summary_min-toolkit-debug" {
  value = module.min-toolkit-debug.summary
}

output "summary_minio" {
  value = module.minio.summary
}

output "summary_mongodb" {
  value = module.mongodb.summary
}

output "summary_nginx" {
  value = module.nginx.summary
}

output "summary_node" {
  value = module.node.summary
}

output "summary_openscap" {
  value = module.openscap.summary
}

output "summary_opentelemetry-collector-contrib" {
  value = module.opentelemetry-collector-contrib.summary
}

output "summary_php" {
  value = module.php.summary
}

output "summary_postgres" {
  value = module.postgres.summary
}

output "summary_python" {
  value = module.python.summary
}

output "summary_pytorch" {
  value = module.pytorch.summary
}

output "summary_redis" {
  value = module.redis.summary
}

output "summary_ruby" {
  value = module.ruby.summary
}

output "summary_rust" {
  value = module.rust.summary
}

output "summary_static" {
  value = module.static.summary
}

output "summary_stunnel" {
  value = module.stunnel.summary
}

output "summary_tomcat" {
  value = module.tomcat.summary
}

output "summary_valkey" {
  value = module.valkey.summary
}

output "summary_wait-for-it" {
  value = module.wait-for-it.summary
}

output "summary_wolfi-base" {
  value = module.wolfi-base.summary
}

output "summary_wordpress" {
  value = module.wordpress.summary
}

