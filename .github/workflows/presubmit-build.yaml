on:
  pull_request:
jobs:
  presubmit-matrix:
    runs-on: ubuntu-latest
    outputs:
      shard-0: ${{ steps.generate-matrix-0.outputs.matrix }}
      shard-1: ${{ steps.generate-matrix-1.outputs.matrix }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - id: files
        uses: tj-actions/changed-files@9ecc6e7fe2e26945b52485ccd9bc4b44000f5af1 # v36.0.14
        with:
          separator: ','
      - id: generate-matrix-0
        uses: ./.github/actions/generate-matrix
        with:
          shard: 0
          sharding-factor: 2
          modified-files: ${{ steps.files.outputs.all_changed_files }}
          melange-mode: none
      - id: generate-matrix-1
        uses: ./.github/actions/generate-matrix
        with:
          shard: 1
          sharding-factor: 2
          modified-files: ${{ steps.files.outputs.all_changed_files }}
          melange-mode: none

  presubmit-build-0:
    runs-on: ubuntu-latest
    needs: presubmit-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.presubmit-matrix.outputs.shard-0) }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Ensure image has tests
        if: matrix.testCommandExe == ''
        run: |
          echo "Error: ${{ matrix.imageName }} image is missing tests."
          exit 1
      - name: Add additional inputs
        id: augmented-inputs
        env:
          EXTRA_INPUT_APKO_IMAGE: ghcr.io/wolfi-dev/apko:latest@sha256:6d6afe067475323f9d6ce4fc3f9ce9652f9afd5b73ed5cc2b18195086067540c
          EXTRA_INPUT_APKO_REPOSITORY_APPEND: https://packages.wolfi.dev/os
          EXTRA_INPUT_APKO_KEYRING_APPEND: https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
        run: |
          # Do not append out repo/keyring/package to Alpine images.
          if grep 'alpinelinux\.org' "${{ matrix.apkoConfig }}" &>/dev/null; then
            unset EXTRA_INPUT_APKO_REPOSITORY_APPEND
            unset EXTRA_INPUT_APKO_KEYRING_APPEND
          fi

          # convert env vars beginning with "EXTRA_INPUT_"
          # to camelcased input variables passed to next step
          set -x
          echo '${{ toJSON(matrix) }}' > inputs.json
          for kv in `env | grep '^EXTRA_INPUT_' | sed 's/^EXTRA_INPUT_//'`; do
            k="$(echo "${kv}" | cut -d "=" -f1 | tr '[:upper:]' '[:lower:]' | sed -r 's/(.)_+(.)/\1\U\2/g;s/^[a-z]/\U&/' | sed 's/.*/\l&/')"
            v="$(echo "${kv}" | cut -d "=" -f2)"
            cat inputs.json | jq -c '. + {'${k}': "'${v}'"}' > inputs.json.tmp
            mv inputs.json.tmp inputs.json
          done
          echo "augmented-inputs=$(cat inputs.json | tr -d '\n')" >> $GITHUB_OUTPUT
      - uses: ./.github/actions/build-image-terraform
        if: ${{ matrix.useTerraform }}
        with: ${{ fromJSON(steps.augmented-inputs.outputs.augmented-inputs) }}
      - uses: ./.github/actions/build-image
        if: ${{ ! matrix.useTerraform }}
        with: ${{ fromJSON(steps.augmented-inputs.outputs.augmented-inputs) }}

  presubmit-build-1:
    runs-on: ubuntu-latest
    needs: presubmit-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.presubmit-matrix.outputs.shard-1) }}
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      - name: Ensure image has tests
        if: matrix.testCommandExe == ''
        run: |
          echo "Error: ${{ matrix.imageName }} image is missing tests."
          exit 1
      - name: Add additional inputs
        id: augmented-inputs
        env:
          EXTRA_INPUT_APKO_IMAGE: ghcr.io/wolfi-dev/apko:latest@sha256:6d6afe067475323f9d6ce4fc3f9ce9652f9afd5b73ed5cc2b18195086067540c
          EXTRA_INPUT_APKO_REPOSITORY_APPEND: https://packages.wolfi.dev/os
          EXTRA_INPUT_APKO_KEYRING_APPEND: https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
        run: |
          # Do not append out repo/keyring/package to Alpine images.
          if grep 'alpinelinux\.org' "${{ matrix.apkoConfig }}" &>/dev/null; then
            unset EXTRA_INPUT_APKO_REPOSITORY_APPEND
            unset EXTRA_INPUT_APKO_KEYRING_APPEND
          fi

          # convert env vars beginning with "EXTRA_INPUT_"
          # to camelcased input variables passed to next step
          set -x
          echo '${{ toJSON(matrix) }}' > inputs.json
          for kv in `env | grep '^EXTRA_INPUT_' | sed 's/^EXTRA_INPUT_//'`; do
            k="$(echo "${kv}" | cut -d "=" -f1 | tr '[:upper:]' '[:lower:]' | sed -r 's/(.)_+(.)/\1\U\2/g;s/^[a-z]/\U&/' | sed 's/.*/\l&/')"
            v="$(echo "${kv}" | cut -d "=" -f2)"
            cat inputs.json | jq -c '. + {'${k}': "'${v}'"}' > inputs.json.tmp
            mv inputs.json.tmp inputs.json
          done
          echo "augmented-inputs=$(cat inputs.json | tr -d '\n')" >> $GITHUB_OUTPUT
      - uses: ./.github/actions/build-image-terraform
        if: ${{ matrix.useTerraform }}
        with: ${{ fromJSON(steps.augmented-inputs.outputs.augmented-inputs) }}
      - uses: ./.github/actions/build-image
        if: ${{ ! matrix.useTerraform }}
        with: ${{ fromJSON(steps.augmented-inputs.outputs.augmented-inputs) }}

  presubmit-roundup:
    needs:
      - presubmit-build-0
      - presubmit-build-1
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5 # v3.0.3

      - if: ${{ env.WORKFLOW_CONCLUSION == 'success' }}
        working-directory: /tmp
        run: echo ${{ env.WORKFLOW_CONCLUSION }} && exit 0

      - if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
        working-directory: /tmp
        run: echo ${{ env.WORKFLOW_CONCLUSION }} && exit 1
