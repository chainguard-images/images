on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      only:
        description: 'Specific image name to build'
        type: string
        required: false
        default: ''
concurrency: k8s-tests
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
    - id: generate-matrix-with-inputs
      if: ${{ inputs.only != '' }}
      uses: ./.github/actions/generate-matrix
      with:
        test-tags: k8s
        modified-files: images/${{ inputs.only }}/image.yaml
    - id: generate-matrix-without-inputs
      if: ${{ inputs.only == '' }}
      uses: ./.github/actions/generate-matrix
      with:
        test-tags: k8s
    - id: generate-matrix
      run: |
        set -x
        trap "rm -f matrix.json" EXIT
        echo '${{ steps.generate-matrix-with-inputs.outputs.matrix }}' > matrix.json
        [[ "$(cat matrix.json)" != "" ]] || echo '${{ steps.generate-matrix-without-inputs.outputs.matrix }}' > matrix.json
        echo "matrix=$(cat matrix.json)" >> $GITHUB_OUTPUT
  run-tests:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: chainguard-dev/actions/setup-kind@main
        with:
          k8s-version: v1.24.x
          registry-authority: registry.local:5000
      - run: |
          kubectl get pods --all-namespaces
      - name: Get registry IP address (for use inside docker)
        id: registry-ip
        run: |
          echo "ip=$(docker inspect registry.local | jq -r '.[0].NetworkSettings.Networks["bridge"].IPAddress')" >> $GITHUB_OUTPUT
      - uses: chainguard-images/actions/apko-publish@main
        with:
          config: ${{ matrix.apkoConfig }}
          tag: ${{ steps.registry-ip.outputs.ip }}:5000/${{ matrix.imageName }}:${{ matrix.apkoTargetTag }}
      - name: Run k8s tests
        run: |
          set -x
          export IMAGE_NAME="registry.local:5000/${{ matrix.imageName }}:${{ matrix.apkoTargetTag }}"
          export IMAGE_TAG_SUFFIX="${{ matrix.apkoTargetTagSuffix }}"
          cd "${{ matrix.testCommandDir }}"
          ${{ matrix.testCommandExe }}
