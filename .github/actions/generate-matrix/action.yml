name: generate-matrix
outputs:
  matrix:
    value: ${{ steps.generate-matrix.outputs.matrix }}
  matrix-unique-images:
    value: ${{ steps.generate-matrix.outputs.matrix-unique-images }}
inputs:
  repository:
    default: ${{ github.repository }}
  token:
    default: ${{ github.token }}
  shard:
    default: 0
  sharding-factor:
    default: 1
  modified-files: {}
runs:
  using: composite
  steps:
    - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
      with:
        go-version-file: 'go.mod'

    # Build and install monopod.
    - shell: bash
      run: |
        go install ./monopod

    - id: generate-matrix
      shell: bash
      run: |
        set -xe
        export PATH="/tmp/bin:${PATH}"

        if [[ "${{ inputs.defaultRegistryOverride }}" != "" ]]; then
          default_registry_args="--default-registry=${{ inputs.defaultRegistryOverride }}"
        fi

        MATRIX=$(mktemp)
        monopod matrix \
           --shard=${{ inputs.shard }} \
           --sharding-factor=${{ inputs.sharding-factor }} \
           --modified-files=${{ inputs.modified-files }} \
           $default_registry_args > "${MATRIX}"
        echo "matrix=$(cat "${MATRIX}")" >> $GITHUB_OUTPUT

        MATRIX_UNIQUE_IMAGES=$(mktemp)
        monopod matrix \
           --shard=${{ inputs.shard }} \
           --sharding-factor=${{ inputs.sharding-factor }} \
           --modified-files=${{ inputs.modified-files }} \
           --unique-images $default_registry_args > "${MATRIX_UNIQUE_IMAGES}"
        echo "matrix-unique-images=$(cat "${MATRIX_UNIQUE_IMAGES}")" >> $GITHUB_OUTPUT

    - name: Touch actions file to prevent postrun failure
      if: always()
      shell: bash
      run: |
        set -x && [[ -f .github/actions/generate-matrix/action.yml ]] || ( \
          mkdir -p .github/actions/generate-matrix/ && echo 'runs: {using: composite, steps: []}' > .github/actions/generate-matrix/action.yml )
