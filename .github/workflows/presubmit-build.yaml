on:
  pull_request:

concurrency:
  group: presubmit-build-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  presubmit-matrix:
    runs-on: ubuntu-latest
    outputs:
      shard-0: ${{ steps.generate-matrix-0.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4 # v3.5.2

      - run: terraform fmt -check -recursive -diff
      - run: ./lint.sh
      - name: Enforce YAML formatting
        uses: docker://ghcr.io/wolfi-dev/wolfictl:latest@sha256:9437d20a511dd2db6393f7cf1a29cbc89df5fd4304389d040c1e722165b7fe03
        with:
          entrypoint: wolfictl
          args: lint yam images/

      - id: files
        uses: tj-actions/changed-files@1c938490c880156b746568a518594309cfb3f66b # v40.2.1
        with:
          separator: ','
      - id: generate-matrix-0
        uses: ./.github/actions/generate-matrix
        with:
          shard: 0
          sharding-factor: 1
          modified-files: ${{ steps.files.outputs.all_changed_files }}

  presubmit-build-0:
    runs-on: ubuntu-latest
    needs: presubmit-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.presubmit-matrix.outputs.shard-0) }}
    steps:
      # In some cases, we runs out of disk space during tests, so this hack frees up approx 10G.
      # See the following issue for more info: https://github.com/actions/runner-images/issues/2840#issuecomment-1284059930
      - name: Free up runner disk space
        shell: bash
        run: |
          set -x
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v4 # v3.5.2

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.3.*'
          terraform_wrapper: false
      # Make cosign/crane CLI available to the tests
      - uses: sigstore/cosign-installer@v3.1.0
      - uses: imjasonh/setup-crane@v0.3

      - uses: chainguard-dev/actions/setup-k3d@main
        with:
          k3s-image: cgr.dev/chainguard/k3s:latest@sha256:5bf7e7eebcff66a03f360511155b90732dd2b9ebcf4079bbf0c3d9501d717ddc

      # Disable version tags.
      - run: |
          echo "TF_APKO_DISABLE_VERSION_TAGS=true" >> $GITHUB_ENV

      - name: Terraform apply
        env:
          TF_VAR_target_repository: registry.local:5000/testing
        run: |
          set -x -o pipefail
          env | grep '^TF_VAR_'

          echo ::group::terraform init
          terraform init
          echo ::endgroup::
          terraform apply -auto-approve "-target=module.${{ matrix.imageName }}" -json | tee /tmp/${{ matrix.imageName }}.tf.json | jq -r '.["@message"]'

      - name: Collect TF diagnostics and upload
        if: ${{ always() }}
        uses: chainguard-dev/actions/terraform-diag@main
        with:
          json-file: /tmp/${{ matrix.imageName }}.tf.json

      - name: Collect K8s diagnostics and upload
        if: ${{ failure() }}
        uses: chainguard-dev/actions/k8s-diag@main
        with:
          cluster-type: k3d

      - name: Upload terraform logs
        if: always()
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3
        with:
          name: ${{ matrix.imageName }}.tf.json
          path: /tmp/${{ matrix.imageName }}.tf.json

  presubmit-roundup:
    needs:
      - presubmit-build-0
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5 # v3.0.3

      - if: ${{ env.WORKFLOW_CONCLUSION == 'success' }}
        working-directory: /tmp
        run: echo ${{ env.WORKFLOW_CONCLUSION }} && exit 0

      - if: ${{ env.WORKFLOW_CONCLUSION == 'failure' }}
        working-directory: /tmp
        run: echo ${{ env.WORKFLOW_CONCLUSION }} && exit 1
