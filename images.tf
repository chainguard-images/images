# DO NOT EDIT. This file is autogenerated by tfgen.
module "apko" {
  source            = "./images/apko"
  target_repository = "${var.target_repository}/apko"
}

module "argocd" {
  source            = "./images/argocd"
  target_repository = "${var.target_repository}/argocd"
}

module "aspnet-runtime" {
  source            = "./images/aspnet-runtime"
  target_repository = "${var.target_repository}/aspnet-runtime"
}

module "aws-cli" {
  source            = "./images/aws-cli"
  target_repository = "${var.target_repository}/aws-cli"
}

module "aws-ebs-csi-driver" {
  source            = "./images/aws-ebs-csi-driver"
  target_repository = "${var.target_repository}/aws-ebs-csi-driver"
}

module "aws-efs-csi-driver" {
  source            = "./images/aws-efs-csi-driver"
  target_repository = "${var.target_repository}/aws-efs-csi-driver"
}

module "aws-for-fluent-bit" {
  source            = "./images/aws-for-fluent-bit"
  target_repository = "${var.target_repository}/aws-for-fluent-bit"
}

module "aws-load-balancer-controller" {
  source            = "./images/aws-load-balancer-controller"
  target_repository = "${var.target_repository}/aws-load-balancer-controller"
}

module "bash" {
  source            = "./images/bash"
  target_repository = "${var.target_repository}/bash"
}

module "bazel" {
  source            = "./images/bazel"
  target_repository = "${var.target_repository}/bazel"
}

module "buck2" {
  source            = "./images/buck2"
  target_repository = "${var.target_repository}/buck2"
}

module "busybox" {
  source            = "./images/busybox"
  target_repository = "${var.target_repository}/busybox"
}

module "cadvisor" {
  source            = "./images/cadvisor"
  target_repository = "${var.target_repository}/cadvisor"
}

module "calico" {
  source            = "./images/calico"
  target_repository = "${var.target_repository}/calico"
}

module "cc-dynamic" {
  source            = "./images/cc-dynamic"
  target_repository = "${var.target_repository}/cc-dynamic"
}

module "cedar" {
  source            = "./images/cedar"
  target_repository = "${var.target_repository}/cedar"
}

module "cert-manager" {
  source            = "./images/cert-manager"
  target_repository = "${var.target_repository}/cert-manager"
}

module "clang" {
  source            = "./images/clang"
  target_repository = "${var.target_repository}/clang"
}

module "cluster-autoscaler" {
  source            = "./images/cluster-autoscaler"
  target_repository = "${var.target_repository}/cluster-autoscaler"
}

module "cluster-proportional-autoscaler" {
  source            = "./images/cluster-proportional-autoscaler"
  target_repository = "${var.target_repository}/cluster-proportional-autoscaler"
}

module "conda" {
  source            = "./images/conda"
  target_repository = "${var.target_repository}/conda"
}

module "configmap-reload" {
  source            = "./images/configmap-reload"
  target_repository = "${var.target_repository}/configmap-reload"
}

module "consul" {
  source            = "./images/consul"
  target_repository = "${var.target_repository}/consul"
}

module "coredns" {
  source            = "./images/coredns"
  target_repository = "${var.target_repository}/coredns"
}

module "cosign" {
  source            = "./images/cosign"
  target_repository = "${var.target_repository}/cosign"
}

module "crane" {
  source            = "./images/crane"
  target_repository = "${var.target_repository}/crane"
}

module "curl" {
  source            = "./images/curl"
  target_repository = "${var.target_repository}/curl"
}

module "deno" {
  source            = "./images/deno"
  target_repository = "${var.target_repository}/deno"
}

module "dex" {
  source            = "./images/dex"
  target_repository = "${var.target_repository}/dex"
}

module "dive" {
  source            = "./images/dive"
  target_repository = "${var.target_repository}/dive"
}

module "dotnet-runtime" {
  source            = "./images/dotnet-runtime"
  target_repository = "${var.target_repository}/dotnet-runtime"
}

module "dotnet-sdk" {
  source            = "./images/dotnet-sdk"
  target_repository = "${var.target_repository}/dotnet-sdk"
}

module "envoy" {
  source            = "./images/envoy"
  target_repository = "${var.target_repository}/envoy"
}

module "envoy-ratelimit" {
  source            = "./images/envoy-ratelimit"
  target_repository = "${var.target_repository}/envoy-ratelimit"
}

module "etcd" {
  source            = "./images/etcd"
  target_repository = "${var.target_repository}/etcd"
}

module "external-dns" {
  source            = "./images/external-dns"
  target_repository = "${var.target_repository}/external-dns"
}

module "external-secrets" {
  source            = "./images/external-secrets"
  target_repository = "${var.target_repository}/external-secrets"
}

module "ffmpeg" {
  source            = "./images/ffmpeg"
  target_repository = "${var.target_repository}/ffmpeg"
}

module "fluent-bit" {
  source            = "./images/fluent-bit"
  target_repository = "${var.target_repository}/fluent-bit"
}

module "fluentd" {
  source            = "./images/fluentd"
  target_repository = "${var.target_repository}/fluentd"
}

module "flux" {
  source            = "./images/flux"
  target_repository = "${var.target_repository}/flux"
}

module "gatekeeper" {
  source            = "./images/gatekeeper"
  target_repository = "${var.target_repository}/gatekeeper"
}

module "gcc-glibc" {
  source            = "./images/gcc-glibc"
  target_repository = "${var.target_repository}/gcc-glibc"
}

module "git" {
  source            = "./images/git"
  target_repository = "${var.target_repository}/git"
}

module "glibc-dynamic" {
  source            = "./images/glibc-dynamic"
  target_repository = "${var.target_repository}/glibc-dynamic"
}

module "go" {
  source            = "./images/go"
  target_repository = "${var.target_repository}/go"
}

module "google-cloud-sdk" {
  source            = "./images/google-cloud-sdk"
  target_repository = "${var.target_repository}/google-cloud-sdk"
}

module "graalvm-native" {
  source            = "./images/graalvm-native"
  target_repository = "${var.target_repository}/graalvm-native"
}

module "gradle" {
  source            = "./images/gradle"
  target_repository = "${var.target_repository}/gradle"
}

module "guacamole-server" {
  source            = "./images/guacamole-server"
  target_repository = "${var.target_repository}/guacamole-server"
}

module "haproxy" {
  source            = "./images/haproxy"
  target_repository = "${var.target_repository}/haproxy"
}

module "haproxy-ingress" {
  source            = "./images/haproxy-ingress"
  target_repository = "${var.target_repository}/haproxy-ingress"
}

module "helm" {
  source            = "./images/helm"
  target_repository = "${var.target_repository}/helm"
}

module "helm-chartmuseum" {
  source            = "./images/helm-chartmuseum"
  target_repository = "${var.target_repository}/helm-chartmuseum"
}

module "http-echo" {
  source            = "./images/http-echo"
  target_repository = "${var.target_repository}/http-echo"
}

module "hugo" {
  source            = "./images/hugo"
  target_repository = "${var.target_repository}/hugo"
}

module "influxdb" {
  source            = "./images/influxdb"
  target_repository = "${var.target_repository}/influxdb"
}

module "jdk" {
  source            = "./images/jdk"
  target_repository = "${var.target_repository}/jdk"
}

module "jenkins" {
  source            = "./images/jenkins"
  target_repository = "${var.target_repository}/jenkins"
}

module "jre" {
  source            = "./images/jre"
  target_repository = "${var.target_repository}/jre"
}

module "k3s" {
  source            = "./images/k3s"
  target_repository = "${var.target_repository}/k3s"
}

module "k8s-sidecar" {
  source            = "./images/k8s-sidecar"
  target_repository = "${var.target_repository}/k8s-sidecar"
}

module "k8sgpt" {
  source            = "./images/k8sgpt"
  target_repository = "${var.target_repository}/k8sgpt"
}

module "k8sgpt-operator" {
  source            = "./images/k8sgpt-operator"
  target_repository = "${var.target_repository}/k8sgpt-operator"
}

module "kafka" {
  source            = "./images/kafka"
  target_repository = "${var.target_repository}/kafka"
}

module "karpenter" {
  source            = "./images/karpenter"
  target_repository = "${var.target_repository}/karpenter"
}

module "keda" {
  source            = "./images/keda"
  target_repository = "${var.target_repository}/keda"
}

module "ko" {
  source            = "./images/ko"
  target_repository = "${var.target_repository}/ko"
}

module "kube-bench" {
  source            = "./images/kube-bench"
  target_repository = "${var.target_repository}/kube-bench"
}

module "kube-downscaler" {
  source            = "./images/kube-downscaler"
  target_repository = "${var.target_repository}/kube-downscaler"
}

module "kube-fluentd-operator" {
  source            = "./images/kube-fluentd-operator"
  target_repository = "${var.target_repository}/kube-fluentd-operator"
}

module "kube-logging-operator" {
  source            = "./images/kube-logging-operator"
  target_repository = "${var.target_repository}/kube-logging-operator"
}

module "kube-state-metrics" {
  source            = "./images/kube-state-metrics"
  target_repository = "${var.target_repository}/kube-state-metrics"
}

module "kubectl" {
  source            = "./images/kubectl"
  target_repository = "${var.target_repository}/kubectl"
}

module "kubernetes-csi-external-attacher" {
  source            = "./images/kubernetes-csi-external-attacher"
  target_repository = "${var.target_repository}/kubernetes-csi-external-attacher"
}

module "kubernetes-csi-external-provisioner" {
  source            = "./images/kubernetes-csi-external-provisioner"
  target_repository = "${var.target_repository}/kubernetes-csi-external-provisioner"
}

module "kubernetes-csi-external-resizer" {
  source            = "./images/kubernetes-csi-external-resizer"
  target_repository = "${var.target_repository}/kubernetes-csi-external-resizer"
}

module "kubernetes-csi-external-snapshot-controller" {
  source            = "./images/kubernetes-csi-external-snapshot-controller"
  target_repository = "${var.target_repository}/kubernetes-csi-external-snapshot-controller"
}

module "kubernetes-csi-external-snapshot-validation-webhook" {
  source            = "./images/kubernetes-csi-external-snapshot-validation-webhook"
  target_repository = "${var.target_repository}/kubernetes-csi-external-snapshot-validation-webhook"
}

module "kubernetes-csi-external-snapshotter" {
  source            = "./images/kubernetes-csi-external-snapshotter"
  target_repository = "${var.target_repository}/kubernetes-csi-external-snapshotter"
}

module "kubernetes-csi-livenessprobe" {
  source            = "./images/kubernetes-csi-livenessprobe"
  target_repository = "${var.target_repository}/kubernetes-csi-livenessprobe"
}

module "kubernetes-csi-node-driver-registrar" {
  source            = "./images/kubernetes-csi-node-driver-registrar"
  target_repository = "${var.target_repository}/kubernetes-csi-node-driver-registrar"
}

module "kubernetes-dashboard" {
  source            = "./images/kubernetes-dashboard"
  target_repository = "${var.target_repository}/kubernetes-dashboard"
}

module "kubernetes-ingress-defaultbackend" {
  source            = "./images/kubernetes-ingress-defaultbackend"
  target_repository = "${var.target_repository}/kubernetes-ingress-defaultbackend"
}

module "kubewatch" {
  source            = "./images/kubewatch"
  target_repository = "${var.target_repository}/kubewatch"
}

module "kyverno" {
  source            = "./images/kyverno"
  target_repository = "${var.target_repository}/kyverno"
}

module "mariadb" {
  source            = "./images/mariadb"
  target_repository = "${var.target_repository}/mariadb"
}

module "maven" {
  source            = "./images/maven"
  target_repository = "${var.target_repository}/maven"
}

module "mdbook" {
  source            = "./images/mdbook"
  target_repository = "${var.target_repository}/mdbook"
}

module "meilisearch" {
  source            = "./images/meilisearch"
  target_repository = "${var.target_repository}/meilisearch"
}

module "melange" {
  source            = "./images/melange"
  target_repository = "${var.target_repository}/melange"
}

module "memcached" {
  source            = "./images/memcached"
  target_repository = "${var.target_repository}/memcached"
}

module "memcached-exporter" {
  source            = "./images/memcached-exporter"
  target_repository = "${var.target_repository}/memcached-exporter"
}

module "metacontroller" {
  source            = "./images/metacontroller"
  target_repository = "${var.target_repository}/metacontroller"
}

module "metrics-server" {
  source            = "./images/metrics-server"
  target_repository = "${var.target_repository}/metrics-server"
}

module "minio" {
  source            = "./images/minio"
  target_repository = "${var.target_repository}/minio"
}

module "nats" {
  source            = "./images/nats"
  target_repository = "${var.target_repository}/nats"
}

module "netcat" {
  source            = "./images/netcat"
  target_repository = "${var.target_repository}/netcat"
}

module "newrelic" {
  source            = "./images/newrelic"
  target_repository = "${var.target_repository}/newrelic"
}

module "nginx" {
  source            = "./images/nginx"
  target_repository = "${var.target_repository}/nginx"
}

module "node" {
  source            = "./images/node"
  target_repository = "${var.target_repository}/node"
}

module "node-problem-detector" {
  source            = "./images/node-problem-detector"
  target_repository = "${var.target_repository}/node-problem-detector"
}

module "nodetaint" {
  source            = "./images/nodetaint"
  target_repository = "${var.target_repository}/nodetaint"
}

module "ntpd-rs" {
  source            = "./images/ntpd-rs"
  target_repository = "${var.target_repository}/ntpd-rs"
}

module "nvidia-device-plugin" {
  source            = "./images/nvidia-device-plugin"
  target_repository = "${var.target_repository}/nvidia-device-plugin"
}

module "oauth2-proxy" {
  source            = "./images/oauth2-proxy"
  target_repository = "${var.target_repository}/oauth2-proxy"
}

module "openai" {
  source            = "./images/openai"
  target_repository = "${var.target_repository}/openai"
}

module "opensearch" {
  source            = "./images/opensearch"
  target_repository = "${var.target_repository}/opensearch"
}

module "paranoia" {
  source            = "./images/paranoia"
  target_repository = "${var.target_repository}/paranoia"
}

module "php" {
  source            = "./images/php"
  target_repository = "${var.target_repository}/php"
}

module "postgres" {
  source            = "./images/postgres"
  target_repository = "${var.target_repository}/postgres"
}

module "powershell" {
  source            = "./images/powershell"
  target_repository = "${var.target_repository}/powershell"
}

module "prometheus" {
  source            = "./images/prometheus"
  target_repository = "${var.target_repository}/prometheus"
}

module "proxysql" {
  source            = "./images/proxysql"
  target_repository = "${var.target_repository}/proxysql"
}

module "pulumi" {
  source            = "./images/pulumi"
  target_repository = "${var.target_repository}/pulumi"
}

module "python" {
  source            = "./images/python"
  target_repository = "${var.target_repository}/python"
}

module "rabbitmq" {
  source            = "./images/rabbitmq"
  target_repository = "${var.target_repository}/rabbitmq"
}

module "redis" {
  source            = "./images/redis"
  target_repository = "${var.target_repository}/redis"
}

module "redis-sentinel" {
  source            = "./images/redis-sentinel"
  target_repository = "${var.target_repository}/redis-sentinel"
}

module "rqlite" {
  source            = "./images/rqlite"
  target_repository = "${var.target_repository}/rqlite"
}

module "ruby" {
  source            = "./images/ruby"
  target_repository = "${var.target_repository}/ruby"
}

module "rust" {
  source            = "./images/rust"
  target_repository = "${var.target_repository}/rust"
}

module "secrets-store-csi-driver" {
  source            = "./images/secrets-store-csi-driver"
  target_repository = "${var.target_repository}/secrets-store-csi-driver"
}

module "secrets-store-csi-driver-provider-gcp" {
  source            = "./images/secrets-store-csi-driver-provider-gcp"
  target_repository = "${var.target_repository}/secrets-store-csi-driver-provider-gcp"
}

module "skaffold" {
  source            = "./images/skaffold"
  target_repository = "${var.target_repository}/skaffold"
}

module "slim-toolkit-debug" {
  source            = "./images/slim-toolkit-debug"
  target_repository = "${var.target_repository}/slim-toolkit-debug"
}

module "spire" {
  source            = "./images/spire"
  target_repository = "${var.target_repository}/spire"
}

module "stakater-reloader" {
  source            = "./images/stakater-reloader"
  target_repository = "${var.target_repository}/stakater-reloader"
}

module "static" {
  source            = "./images/static"
  target_repository = "${var.target_repository}/static"
}

module "tekton" {
  source            = "./images/tekton"
  target_repository = "${var.target_repository}/tekton"
}

module "telegraf" {
  source            = "./images/telegraf"
  target_repository = "${var.target_repository}/telegraf"
}

module "terraform" {
  source            = "./images/terraform"
  target_repository = "${var.target_repository}/terraform"
}

module "thanos" {
  source            = "./images/thanos"
  target_repository = "${var.target_repository}/thanos"
}

module "thanos-operator" {
  source            = "./images/thanos-operator"
  target_repository = "${var.target_repository}/thanos-operator"
}

module "tigera-operator" {
  source            = "./images/tigera-operator"
  target_repository = "${var.target_repository}/tigera-operator"
}

module "traefik" {
  source            = "./images/traefik"
  target_repository = "${var.target_repository}/traefik"
}

module "trust-manager" {
  source            = "./images/trust-manager"
  target_repository = "${var.target_repository}/trust-manager"
}

module "vault" {
  source            = "./images/vault"
  target_repository = "${var.target_repository}/vault"
}

module "vela-cli" {
  source            = "./images/vela-cli"
  target_repository = "${var.target_repository}/vela-cli"
}

module "vertical-pod-autoscaler" {
  source            = "./images/vertical-pod-autoscaler"
  target_repository = "${var.target_repository}/vertical-pod-autoscaler"
}

module "vt" {
  source            = "./images/vt"
  target_repository = "${var.target_repository}/vt"
}

module "wait-for-it" {
  source            = "./images/wait-for-it"
  target_repository = "${var.target_repository}/wait-for-it"
}

module "wasmer" {
  source            = "./images/wasmer"
  target_repository = "${var.target_repository}/wasmer"
}

module "wasmtime" {
  source            = "./images/wasmtime"
  target_repository = "${var.target_repository}/wasmtime"
}

module "wavefront-proxy" {
  source            = "./images/wavefront-proxy"
  target_repository = "${var.target_repository}/wavefront-proxy"
}

module "wazero" {
  source            = "./images/wazero"
  target_repository = "${var.target_repository}/wazero"
}

module "weaviate" {
  source            = "./images/weaviate"
  target_repository = "${var.target_repository}/weaviate"
}

module "wolfi-base" {
  source            = "./images/wolfi-base"
  target_repository = "${var.target_repository}/wolfi-base"
}

module "zig" {
  source            = "./images/zig"
  target_repository = "${var.target_repository}/zig"
}

module "zookeeper" {
  source            = "./images/zookeeper"
  target_repository = "${var.target_repository}/zookeeper"
}

module "zot" {
  source            = "./images/zot"
  target_repository = "${var.target_repository}/zot"
}

output "images" {
  value = {
    apko                                                = module.apko.images
    argocd                                              = module.argocd.images
    aspnet-runtime                                      = module.aspnet-runtime.images
    aws-cli                                             = module.aws-cli.images
    aws-ebs-csi-driver                                  = module.aws-ebs-csi-driver.images
    aws-efs-csi-driver                                  = module.aws-efs-csi-driver.images
    aws-for-fluent-bit                                  = module.aws-for-fluent-bit.images
    aws-load-balancer-controller                        = module.aws-load-balancer-controller.images
    bash                                                = module.bash.images
    bazel                                               = module.bazel.images
    buck2                                               = module.buck2.images
    busybox                                             = module.busybox.images
    cadvisor                                            = module.cadvisor.images
    calico                                              = module.calico.images
    cc-dynamic                                          = module.cc-dynamic.images
    cedar                                               = module.cedar.images
    cert-manager                                        = module.cert-manager.images
    clang                                               = module.clang.images
    cluster-autoscaler                                  = module.cluster-autoscaler.images
    cluster-proportional-autoscaler                     = module.cluster-proportional-autoscaler.images
    conda                                               = module.conda.images
    configmap-reload                                    = module.configmap-reload.images
    consul                                              = module.consul.images
    coredns                                             = module.coredns.images
    cosign                                              = module.cosign.images
    crane                                               = module.crane.images
    curl                                                = module.curl.images
    deno                                                = module.deno.images
    dex                                                 = module.dex.images
    dive                                                = module.dive.images
    dotnet-runtime                                      = module.dotnet-runtime.images
    dotnet-sdk                                          = module.dotnet-sdk.images
    envoy                                               = module.envoy.images
    envoy-ratelimit                                     = module.envoy-ratelimit.images
    etcd                                                = module.etcd.images
    external-dns                                        = module.external-dns.images
    external-secrets                                    = module.external-secrets.images
    ffmpeg                                              = module.ffmpeg.images
    fluent-bit                                          = module.fluent-bit.images
    fluentd                                             = module.fluentd.images
    flux                                                = module.flux.images
    gatekeeper                                          = module.gatekeeper.images
    gcc-glibc                                           = module.gcc-glibc.images
    git                                                 = module.git.images
    glibc-dynamic                                       = module.glibc-dynamic.images
    go                                                  = module.go.images
    google-cloud-sdk                                    = module.google-cloud-sdk.images
    graalvm-native                                      = module.graalvm-native.images
    gradle                                              = module.gradle.images
    guacamole-server                                    = module.guacamole-server.images
    haproxy                                             = module.haproxy.images
    haproxy-ingress                                     = module.haproxy-ingress.images
    helm                                                = module.helm.images
    helm-chartmuseum                                    = module.helm-chartmuseum.images
    http-echo                                           = module.http-echo.images
    hugo                                                = module.hugo.images
    influxdb                                            = module.influxdb.images
    jdk                                                 = module.jdk.images
    jenkins                                             = module.jenkins.images
    jre                                                 = module.jre.images
    k3s                                                 = module.k3s.images
    k8s-sidecar                                         = module.k8s-sidecar.images
    k8sgpt                                              = module.k8sgpt.images
    k8sgpt-operator                                     = module.k8sgpt-operator.images
    kafka                                               = module.kafka.images
    karpenter                                           = module.karpenter.images
    keda                                                = module.keda.images
    ko                                                  = module.ko.images
    kube-bench                                          = module.kube-bench.images
    kube-downscaler                                     = module.kube-downscaler.images
    kube-fluentd-operator                               = module.kube-fluentd-operator.images
    kube-logging-operator                               = module.kube-logging-operator.images
    kube-state-metrics                                  = module.kube-state-metrics.images
    kubectl                                             = module.kubectl.images
    kubernetes-csi-external-attacher                    = module.kubernetes-csi-external-attacher.images
    kubernetes-csi-external-provisioner                 = module.kubernetes-csi-external-provisioner.images
    kubernetes-csi-external-resizer                     = module.kubernetes-csi-external-resizer.images
    kubernetes-csi-external-snapshot-controller         = module.kubernetes-csi-external-snapshot-controller.images
    kubernetes-csi-external-snapshot-validation-webhook = module.kubernetes-csi-external-snapshot-validation-webhook.images
    kubernetes-csi-external-snapshotter                 = module.kubernetes-csi-external-snapshotter.images
    kubernetes-csi-livenessprobe                        = module.kubernetes-csi-livenessprobe.images
    kubernetes-csi-node-driver-registrar                = module.kubernetes-csi-node-driver-registrar.images
    kubernetes-dashboard                                = module.kubernetes-dashboard.images
    kubernetes-ingress-defaultbackend                   = module.kubernetes-ingress-defaultbackend.images
    kubewatch                                           = module.kubewatch.images
    kyverno                                             = module.kyverno.images
    mariadb                                             = module.mariadb.images
    maven                                               = module.maven.images
    mdbook                                              = module.mdbook.images
    meilisearch                                         = module.meilisearch.images
    melange                                             = module.melange.images
    memcached                                           = module.memcached.images
    memcached-exporter                                  = module.memcached-exporter.images
    metacontroller                                      = module.metacontroller.images
    metrics-server                                      = module.metrics-server.images
    minio                                               = module.minio.images
    nats                                                = module.nats.images
    netcat                                              = module.netcat.images
    newrelic                                            = module.newrelic.images
    nginx                                               = module.nginx.images
    node                                                = module.node.images
    node-problem-detector                               = module.node-problem-detector.images
    nodetaint                                           = module.nodetaint.images
    ntpd-rs                                             = module.ntpd-rs.images
    nvidia-device-plugin                                = module.nvidia-device-plugin.images
    oauth2-proxy                                        = module.oauth2-proxy.images
    openai                                              = module.openai.images
    opensearch                                          = module.opensearch.images
    paranoia                                            = module.paranoia.images
    php                                                 = module.php.images
    postgres                                            = module.postgres.images
    powershell                                          = module.powershell.images
    prometheus                                          = module.prometheus.images
    proxysql                                            = module.proxysql.images
    pulumi                                              = module.pulumi.images
    python                                              = module.python.images
    rabbitmq                                            = module.rabbitmq.images
    redis                                               = module.redis.images
    redis-sentinel                                      = module.redis-sentinel.images
    rqlite                                              = module.rqlite.images
    ruby                                                = module.ruby.images
    rust                                                = module.rust.images
    secrets-store-csi-driver                            = module.secrets-store-csi-driver.images
    secrets-store-csi-driver-provider-gcp               = module.secrets-store-csi-driver-provider-gcp.images
    skaffold                                            = module.skaffold.images
    slim-toolkit-debug                                  = module.slim-toolkit-debug.images
    spire                                               = module.spire.images
    stakater-reloader                                   = module.stakater-reloader.images
    static                                              = module.static.images
    tekton                                              = module.tekton.images
    telegraf                                            = module.telegraf.images
    terraform                                           = module.terraform.images
    thanos                                              = module.thanos.images
    thanos-operator                                     = module.thanos-operator.images
    tigera-operator                                     = module.tigera-operator.images
    traefik                                             = module.traefik.images
    trust-manager                                       = module.trust-manager.images
    vault                                               = module.vault.images
    vela-cli                                            = module.vela-cli.images
    vertical-pod-autoscaler                             = module.vertical-pod-autoscaler.images
    vt                                                  = module.vt.images
    wait-for-it                                         = module.wait-for-it.images
    wasmer                                              = module.wasmer.images
    wasmtime                                            = module.wasmtime.images
    wavefront-proxy                                     = module.wavefront-proxy.images
    wazero                                              = module.wazero.images
    weaviate                                            = module.weaviate.images
    wolfi-base                                          = module.wolfi-base.images
    zig                                                 = module.zig.images
    zookeeper                                           = module.zookeeper.images
    zot                                                 = module.zot.images
  }
}
