# DO NOT EDIT - this file is autogenerated by tfgen

module "airflow" {
  source            = "./images/airflow"
  target_repository = "${var.target_repository}/airflow"
}

module "apache-nifi" {
  source            = "./images/apache-nifi"
  target_repository = "${var.target_repository}/apache-nifi"
}

module "apko" {
  source            = "./images/apko"
  target_repository = "${var.target_repository}/apko"
}

module "argo" {
  source            = "./images/argo"
  target_repository = "${var.target_repository}/argo"
}

module "argocd" {
  source            = "./images/argocd"
  target_repository = "${var.target_repository}/argocd"
}

module "argocd-extension-installer" {
  source            = "./images/argocd-extension-installer"
  target_repository = "${var.target_repository}/argocd-extension-installer"
}

module "aspnet-runtime" {
  source            = "./images/aspnet-runtime"
  target_repository = "${var.target_repository}/aspnet-runtime"
}

module "atlantis" {
  source            = "./images/atlantis"
  target_repository = "${var.target_repository}/atlantis"
}

module "aws-cli" {
  source            = "./images/aws-cli"
  target_repository = "${var.target_repository}/aws-cli"
}

module "aws-cli-v2" {
  source            = "./images/aws-cli-v2"
  target_repository = "${var.target_repository}/aws-cli-v2"
}

module "aws-ebs-csi-driver" {
  source            = "./images/aws-ebs-csi-driver"
  target_repository = "${var.target_repository}/aws-ebs-csi-driver"
}

module "aws-efs-csi-driver" {
  source            = "./images/aws-efs-csi-driver"
  target_repository = "${var.target_repository}/aws-efs-csi-driver"
}

module "aws-for-fluent-bit" {
  source            = "./images/aws-for-fluent-bit"
  target_repository = "${var.target_repository}/aws-for-fluent-bit"
}

module "aws-load-balancer-controller" {
  source            = "./images/aws-load-balancer-controller"
  target_repository = "${var.target_repository}/aws-load-balancer-controller"
}

module "az" {
  source            = "./images/az"
  target_repository = "${var.target_repository}/az"
}

module "bank-vaults" {
  source            = "./images/bank-vaults"
  target_repository = "${var.target_repository}/bank-vaults"
}

module "bash" {
  source            = "./images/bash"
  target_repository = "${var.target_repository}/bash"
}

module "bazel" {
  source            = "./images/bazel"
  target_repository = "${var.target_repository}/bazel"
}

module "bincapz" {
  source            = "./images/bincapz"
  target_repository = "${var.target_repository}/bincapz"
}

module "boring-registry" {
  source            = "./images/boring-registry"
  target_repository = "${var.target_repository}/boring-registry"
}

module "buck2" {
  source            = "./images/buck2"
  target_repository = "${var.target_repository}/buck2"
}

module "buildkit" {
  source            = "./images/buildkit"
  target_repository = "${var.target_repository}/buildkit"
}

module "bun" {
  source            = "./images/bun"
  target_repository = "${var.target_repository}/bun"
}

module "caddy" {
  source            = "./images/caddy"
  target_repository = "${var.target_repository}/caddy"
}

module "cadvisor" {
  source            = "./images/cadvisor"
  target_repository = "${var.target_repository}/cadvisor"
}

module "cass-config-builder" {
  source            = "./images/cass-config-builder"
  target_repository = "${var.target_repository}/cass-config-builder"
}

module "cass-operator" {
  source            = "./images/cass-operator"
  target_repository = "${var.target_repository}/cass-operator"
}

module "cassandra" {
  source            = "./images/cassandra"
  target_repository = "${var.target_repository}/cassandra"
}

module "cassandra-medusa" {
  source            = "./images/cassandra-medusa"
  target_repository = "${var.target_repository}/cassandra-medusa"
}

module "cassandra-reaper" {
  source            = "./images/cassandra-reaper"
  target_repository = "${var.target_repository}/cassandra-reaper"
}

module "cc-dynamic" {
  source            = "./images/cc-dynamic"
  target_repository = "${var.target_repository}/cc-dynamic"
}

module "cedar" {
  source            = "./images/cedar"
  target_repository = "${var.target_repository}/cedar"
}

module "cert-exporter" {
  source            = "./images/cert-exporter"
  target_repository = "${var.target_repository}/cert-exporter"
}

module "cert-manager" {
  source            = "./images/cert-manager"
  target_repository = "${var.target_repository}/cert-manager"
}

module "cert-manager-webhook-pdns" {
  source            = "./images/cert-manager-webhook-pdns"
  target_repository = "${var.target_repository}/cert-manager-webhook-pdns"
}

module "cfssl" {
  source            = "./images/cfssl"
  target_repository = "${var.target_repository}/cfssl"
}

module "chromium" {
  source            = "./images/chromium"
  target_repository = "${var.target_repository}/chromium"
}

module "cilium" {
  source            = "./images/cilium"
  target_repository = "${var.target_repository}/cilium"
}

module "clang" {
  source            = "./images/clang"
  target_repository = "${var.target_repository}/clang"
}

module "clickhouse" {
  source            = "./images/clickhouse"
  target_repository = "${var.target_repository}/clickhouse"
}

module "cluster-autoscaler" {
  source            = "./images/cluster-autoscaler"
  target_repository = "${var.target_repository}/cluster-autoscaler"
}

module "cluster-proportional-autoscaler" {
  source            = "./images/cluster-proportional-autoscaler"
  target_repository = "${var.target_repository}/cluster-proportional-autoscaler"
}

module "conda" {
  source            = "./images/conda"
  target_repository = "${var.target_repository}/conda"
}

module "configmap-reload" {
  source            = "./images/configmap-reload"
  target_repository = "${var.target_repository}/configmap-reload"
}

module "confluent-kafka" {
  source            = "./images/confluent-kafka"
  target_repository = "${var.target_repository}/confluent-kafka"
}

module "consul" {
  source            = "./images/consul"
  target_repository = "${var.target_repository}/consul"
}

module "coredns" {
  source            = "./images/coredns"
  target_repository = "${var.target_repository}/coredns"
}

module "cortex" {
  source            = "./images/cortex"
  target_repository = "${var.target_repository}/cortex"
}

module "cosign" {
  source            = "./images/cosign"
  target_repository = "${var.target_repository}/cosign"
}

module "crane" {
  source            = "./images/crane"
  target_repository = "${var.target_repository}/crane"
}

module "crossplane" {
  source            = "./images/crossplane"
  target_repository = "${var.target_repository}/crossplane"
}

module "crossplane-aws" {
  source            = "./images/crossplane-aws"
  target_repository = "${var.target_repository}/crossplane-aws"
}

module "crossplane-azure" {
  source            = "./images/crossplane-azure"
  target_repository = "${var.target_repository}/crossplane-azure"
}

module "ctlog" {
  source            = "./images/ctlog"
  target_repository = "${var.target_repository}/ctlog"
}

module "curl" {
  source            = "./images/curl"
  target_repository = "${var.target_repository}/curl"
}

module "dask-gateway" {
  source            = "./images/dask-gateway"
  target_repository = "${var.target_repository}/dask-gateway"
}

module "datadog-agent" {
  source            = "./images/datadog-agent"
  target_repository = "${var.target_repository}/datadog-agent"
}

module "deno" {
  source            = "./images/deno"
  target_repository = "${var.target_repository}/deno"
}

module "dependency-track" {
  source            = "./images/dependency-track"
  target_repository = "${var.target_repository}/dependency-track"
}

module "dex" {
  source            = "./images/dex"
  target_repository = "${var.target_repository}/dex"
}

module "dive" {
  source            = "./images/dive"
  target_repository = "${var.target_repository}/dive"
}

module "docker-cli" {
  source            = "./images/docker-cli"
  target_repository = "${var.target_repository}/docker-cli"
}

module "docker-selenium" {
  source            = "./images/docker-selenium"
  target_repository = "${var.target_repository}/docker-selenium"
}

module "doppler-kubernetes-operator" {
  source            = "./images/doppler-kubernetes-operator"
  target_repository = "${var.target_repository}/doppler-kubernetes-operator"
}

module "dotnet" {
  source            = "./images/dotnet"
  target_repository = "${var.target_repository}/dotnet"
}

module "dragonfly" {
  source            = "./images/dragonfly"
  target_repository = "${var.target_repository}/dragonfly"
}

module "dynamic-localpv-provisioner" {
  source            = "./images/dynamic-localpv-provisioner"
  target_repository = "${var.target_repository}/dynamic-localpv-provisioner"
}

module "eck-operator" {
  source            = "./images/eck-operator"
  target_repository = "${var.target_repository}/eck-operator"
}

module "envoy" {
  source            = "./images/envoy"
  target_repository = "${var.target_repository}/envoy"
}

module "envoy-ratelimit" {
  source            = "./images/envoy-ratelimit"
  target_repository = "${var.target_repository}/envoy-ratelimit"
}

module "erlang" {
  source            = "./images/erlang"
  target_repository = "${var.target_repository}/erlang"
}

module "etcd" {
  source            = "./images/etcd"
  target_repository = "${var.target_repository}/etcd"
}

module "external-dns" {
  source            = "./images/external-dns"
  target_repository = "${var.target_repository}/external-dns"
}

module "external-secrets" {
  source            = "./images/external-secrets"
  target_repository = "${var.target_repository}/external-secrets"
}

module "falco-no-driver" {
  source            = "./images/falco-no-driver"
  target_repository = "${var.target_repository}/falco-no-driver"
}

module "falcoctl" {
  source            = "./images/falcoctl"
  target_repository = "${var.target_repository}/falcoctl"
}

module "falcosidekick" {
  source            = "./images/falcosidekick"
  target_repository = "${var.target_repository}/falcosidekick"
}

module "ffmpeg" {
  source            = "./images/ffmpeg"
  target_repository = "${var.target_repository}/ffmpeg"
}

module "filebeat" {
  source            = "./images/filebeat"
  target_repository = "${var.target_repository}/filebeat"
}

module "fluent-bit" {
  source            = "./images/fluent-bit"
  target_repository = "${var.target_repository}/fluent-bit"
}

module "fluent-bit-plugin-loki" {
  source            = "./images/fluent-bit-plugin-loki"
  target_repository = "${var.target_repository}/fluent-bit-plugin-loki"
}

module "fluent-operator" {
  source            = "./images/fluent-operator"
  target_repository = "${var.target_repository}/fluent-operator"
}

module "fluentd" {
  source            = "./images/fluentd"
  target_repository = "${var.target_repository}/fluentd"
}

module "flux" {
  source            = "./images/flux"
  target_repository = "${var.target_repository}/flux"
}

module "fulcio" {
  source            = "./images/fulcio"
  target_repository = "${var.target_repository}/fulcio"
}

module "gatekeeper" {
  source            = "./images/gatekeeper"
  target_repository = "${var.target_repository}/gatekeeper"
}

module "gcc-glibc" {
  source            = "./images/gcc-glibc"
  target_repository = "${var.target_repository}/gcc-glibc"
}

module "gha-runner-scale-set-controller" {
  source            = "./images/gha-runner-scale-set-controller"
  target_repository = "${var.target_repository}/gha-runner-scale-set-controller"
}

module "gitlab" {
  source            = "./images/gitlab"
  target_repository = "${var.target_repository}/gitlab"
}

module "gitness" {
  source            = "./images/gitness"
  target_repository = "${var.target_repository}/gitness"
}

module "glibc-dynamic" {
  source            = "./images/glibc-dynamic"
  target_repository = "${var.target_repository}/glibc-dynamic"
}

module "go" {
  source            = "./images/go"
  target_repository = "${var.target_repository}/go"
}

module "go-ipfs" {
  source            = "./images/go-ipfs"
  target_repository = "${var.target_repository}/go-ipfs"
}

module "google-cloud-sdk" {
  source            = "./images/google-cloud-sdk"
  target_repository = "${var.target_repository}/google-cloud-sdk"
}

module "gptscript" {
  source            = "./images/gptscript"
  target_repository = "${var.target_repository}/gptscript"
}

module "gpu-feature-discovery" {
  source            = "./images/gpu-feature-discovery"
  target_repository = "${var.target_repository}/gpu-feature-discovery"
}

module "gradle" {
  source            = "./images/gradle"
  target_repository = "${var.target_repository}/gradle"
}

module "grafana" {
  source            = "./images/grafana"
  target_repository = "${var.target_repository}/grafana"
}

module "grafana-agent-operator" {
  source            = "./images/grafana-agent-operator"
  target_repository = "${var.target_repository}/grafana-agent-operator"
}

module "grafana-mimir" {
  source            = "./images/grafana-mimir"
  target_repository = "${var.target_repository}/grafana-mimir"
}

module "grafana-operator" {
  source            = "./images/grafana-operator"
  target_repository = "${var.target_repository}/grafana-operator"
}

module "grafana-rollout-operator" {
  source            = "./images/grafana-rollout-operator"
  target_repository = "${var.target_repository}/grafana-rollout-operator"
}

module "grype" {
  source            = "./images/grype"
  target_repository = "${var.target_repository}/grype"
}

module "guacamole-server" {
  source            = "./images/guacamole-server"
  target_repository = "${var.target_repository}/guacamole-server"
}

module "haproxy" {
  source            = "./images/haproxy"
  target_repository = "${var.target_repository}/haproxy"
}

module "haproxy-ingress" {
  source            = "./images/haproxy-ingress"
  target_repository = "${var.target_repository}/haproxy-ingress"
}

module "helm" {
  source            = "./images/helm"
  target_repository = "${var.target_repository}/helm"
}

module "helm-chartmuseum" {
  source            = "./images/helm-chartmuseum"
  target_repository = "${var.target_repository}/helm-chartmuseum"
}

module "helm-operator" {
  source            = "./images/helm-operator"
  target_repository = "${var.target_repository}/helm-operator"
}

module "http-echo" {
  source            = "./images/http-echo"
  target_repository = "${var.target_repository}/http-echo"
}

module "hugo" {
  source            = "./images/hugo"
  target_repository = "${var.target_repository}/hugo"
}

module "influxdb" {
  source            = "./images/influxdb"
  target_repository = "${var.target_repository}/influxdb"
}

module "ingress-nginx-controller" {
  source            = "./images/ingress-nginx-controller"
  target_repository = "${var.target_repository}/ingress-nginx-controller"
}

module "ip-masq-agent" {
  source            = "./images/ip-masq-agent"
  target_repository = "${var.target_repository}/ip-masq-agent"
}

module "istio" {
  source            = "./images/istio"
  target_repository = "${var.target_repository}/istio"
}

module "jdk" {
  source            = "./images/jdk"
  target_repository = "${var.target_repository}/jdk"
}

module "jdk-lts" {
  source            = "./images/jdk-lts"
  target_repository = "${var.target_repository}/jdk-lts"
}

module "jellyfin" {
  source            = "./images/jellyfin"
  target_repository = "${var.target_repository}/jellyfin"
}

module "jenkins" {
  source            = "./images/jenkins"
  target_repository = "${var.target_repository}/jenkins"
}

module "jitsucom-bulker" {
  source            = "./images/jitsucom-bulker"
  target_repository = "${var.target_repository}/jitsucom-bulker"
}

module "jitsucom-jitsu" {
  source            = "./images/jitsucom-jitsu"
  target_repository = "${var.target_repository}/jitsucom-jitsu"
}

module "jre" {
  source            = "./images/jre"
  target_repository = "${var.target_repository}/jre"
}

module "jre-lts" {
  source            = "./images/jre-lts"
  target_repository = "${var.target_repository}/jre-lts"
}

module "k8s-sidecar" {
  source            = "./images/k8s-sidecar"
  target_repository = "${var.target_repository}/k8s-sidecar"
}

module "k8sgpt" {
  source            = "./images/k8sgpt"
  target_repository = "${var.target_repository}/k8sgpt"
}

module "k8sgpt-operator" {
  source            = "./images/k8sgpt-operator"
  target_repository = "${var.target_repository}/k8sgpt-operator"
}

module "k8ssandra-operator" {
  source            = "./images/k8ssandra-operator"
  target_repository = "${var.target_repository}/k8ssandra-operator"
}

module "kafka" {
  source            = "./images/kafka"
  target_repository = "${var.target_repository}/kafka"
}

module "karpenter" {
  source            = "./images/karpenter"
  target_repository = "${var.target_repository}/karpenter"
}

module "keda" {
  source            = "./images/keda"
  target_repository = "${var.target_repository}/keda"
}

module "keycloak" {
  source            = "./images/keycloak"
  target_repository = "${var.target_repository}/keycloak"
}

module "keycloak-operator" {
  source            = "./images/keycloak-operator"
  target_repository = "${var.target_repository}/keycloak-operator"
}

module "kibana" {
  source            = "./images/kibana"
  target_repository = "${var.target_repository}/kibana"
}

module "ko" {
  source            = "./images/ko"
  target_repository = "${var.target_repository}/ko"
}

module "kor" {
  source            = "./images/kor"
  target_repository = "${var.target_repository}/kor"
}

module "kube-bench" {
  source            = "./images/kube-bench"
  target_repository = "${var.target_repository}/kube-bench"
}

module "kube-downscaler" {
  source            = "./images/kube-downscaler"
  target_repository = "${var.target_repository}/kube-downscaler"
}

module "kube-fluentd-operator" {
  source            = "./images/kube-fluentd-operator"
  target_repository = "${var.target_repository}/kube-fluentd-operator"
}

module "kube-logging-operator" {
  source            = "./images/kube-logging-operator"
  target_repository = "${var.target_repository}/kube-logging-operator"
}

module "kube-logging-operator-fluentd" {
  source            = "./images/kube-logging-operator-fluentd"
  target_repository = "${var.target_repository}/kube-logging-operator-fluentd"
}

module "kube-state-metrics" {
  source            = "./images/kube-state-metrics"
  target_repository = "${var.target_repository}/kube-state-metrics"
}

module "kube-vip" {
  source            = "./images/kube-vip"
  target_repository = "${var.target_repository}/kube-vip"
}

module "kube-webhook-certgen" {
  source            = "./images/kube-webhook-certgen"
  target_repository = "${var.target_repository}/kube-webhook-certgen"
}

module "kubectl" {
  source            = "./images/kubectl"
  target_repository = "${var.target_repository}/kubectl"
}

module "kubeflow-centraldashboard" {
  source            = "./images/kubeflow-centraldashboard"
  target_repository = "${var.target_repository}/kubeflow-centraldashboard"
}

module "kubeflow-pipelines" {
  source            = "./images/kubeflow-pipelines"
  target_repository = "${var.target_repository}/kubeflow-pipelines"
}

module "kubeflow-pipelines-visualization-server" {
  source            = "./images/kubeflow-pipelines-visualization-server"
  target_repository = "${var.target_repository}/kubeflow-pipelines-visualization-server"
}

module "kuberay-operator" {
  source            = "./images/kuberay-operator"
  target_repository = "${var.target_repository}/kuberay-operator"
}

module "kubernetes-autoscaler-addon-resizer" {
  source            = "./images/kubernetes-autoscaler-addon-resizer"
  target_repository = "${var.target_repository}/kubernetes-autoscaler-addon-resizer"
}

module "kubernetes-csi-external-attacher" {
  source            = "./images/kubernetes-csi-external-attacher"
  target_repository = "${var.target_repository}/kubernetes-csi-external-attacher"
}

module "kubernetes-csi-external-provisioner" {
  source            = "./images/kubernetes-csi-external-provisioner"
  target_repository = "${var.target_repository}/kubernetes-csi-external-provisioner"
}

module "kubernetes-csi-external-resizer" {
  source            = "./images/kubernetes-csi-external-resizer"
  target_repository = "${var.target_repository}/kubernetes-csi-external-resizer"
}

module "kubernetes-csi-external-snapshot-controller" {
  source            = "./images/kubernetes-csi-external-snapshot-controller"
  target_repository = "${var.target_repository}/kubernetes-csi-external-snapshot-controller"
}

module "kubernetes-csi-external-snapshot-validation-webhook" {
  source            = "./images/kubernetes-csi-external-snapshot-validation-webhook"
  target_repository = "${var.target_repository}/kubernetes-csi-external-snapshot-validation-webhook"
}

module "kubernetes-csi-external-snapshotter" {
  source            = "./images/kubernetes-csi-external-snapshotter"
  target_repository = "${var.target_repository}/kubernetes-csi-external-snapshotter"
}

module "kubernetes-csi-livenessprobe" {
  source            = "./images/kubernetes-csi-livenessprobe"
  target_repository = "${var.target_repository}/kubernetes-csi-livenessprobe"
}

module "kubernetes-csi-node-driver-registrar" {
  source            = "./images/kubernetes-csi-node-driver-registrar"
  target_repository = "${var.target_repository}/kubernetes-csi-node-driver-registrar"
}

module "kubernetes-dashboard" {
  source            = "./images/kubernetes-dashboard"
  target_repository = "${var.target_repository}/kubernetes-dashboard"
}

module "kubernetes-dns-node-cache" {
  source            = "./images/kubernetes-dns-node-cache"
  target_repository = "${var.target_repository}/kubernetes-dns-node-cache"
}

module "kubernetes-event-exporter" {
  source            = "./images/kubernetes-event-exporter"
  target_repository = "${var.target_repository}/kubernetes-event-exporter"
}

module "kubernetes-ingress-defaultbackend" {
  source            = "./images/kubernetes-ingress-defaultbackend"
  target_repository = "${var.target_repository}/kubernetes-ingress-defaultbackend"
}

module "kubewatch" {
  source            = "./images/kubewatch"
  target_repository = "${var.target_repository}/kubewatch"
}

module "kyverno" {
  source            = "./images/kyverno"
  target_repository = "${var.target_repository}/kyverno"
}

module "kyverno-policy-reporter" {
  source            = "./images/kyverno-policy-reporter"
  target_repository = "${var.target_repository}/kyverno-policy-reporter"
}

module "laravel" {
  source            = "./images/laravel"
  target_repository = "${var.target_repository}/laravel"
}

module "litestream" {
  source            = "./images/litestream"
  target_repository = "${var.target_repository}/litestream"
}

module "local-volume-node-cleanup" {
  source            = "./images/local-volume-node-cleanup"
  target_repository = "${var.target_repository}/local-volume-node-cleanup"
}

module "local-volume-provisioner" {
  source            = "./images/local-volume-provisioner"
  target_repository = "${var.target_repository}/local-volume-provisioner"
}

module "logstash-oss-with-opensearch-output-plugin" {
  source            = "./images/logstash-oss-with-opensearch-output-plugin"
  target_repository = "${var.target_repository}/logstash-oss-with-opensearch-output-plugin"
}

module "loki" {
  source            = "./images/loki"
  target_repository = "${var.target_repository}/loki"
}

module "management-api-for-apache-cassandra" {
  source            = "./images/management-api-for-apache-cassandra"
  target_repository = "${var.target_repository}/management-api-for-apache-cassandra"
}

module "mariadb" {
  source            = "./images/mariadb"
  target_repository = "${var.target_repository}/mariadb"
}

module "mdbook" {
  source            = "./images/mdbook"
  target_repository = "${var.target_repository}/mdbook"
}

module "meilisearch" {
  source            = "./images/meilisearch"
  target_repository = "${var.target_repository}/meilisearch"
}

module "melange" {
  source            = "./images/melange"
  target_repository = "${var.target_repository}/melange"
}

module "memcached" {
  source            = "./images/memcached"
  target_repository = "${var.target_repository}/memcached"
}

module "memcached-exporter" {
  source            = "./images/memcached-exporter"
  target_repository = "${var.target_repository}/memcached-exporter"
}

module "memcached-exporter-bitnami" {
  source            = "./images/memcached-exporter-bitnami"
  target_repository = "${var.target_repository}/memcached-exporter-bitnami"
}

module "metacontroller" {
  source            = "./images/metacontroller"
  target_repository = "${var.target_repository}/metacontroller"
}

module "metallb" {
  source            = "./images/metallb"
  target_repository = "${var.target_repository}/metallb"
}

module "metrics-server" {
  source            = "./images/metrics-server"
  target_repository = "${var.target_repository}/metrics-server"
}

module "min-toolkit-debug" {
  source            = "./images/min-toolkit-debug"
  target_repository = "${var.target_repository}/min-toolkit-debug"
}

module "minio" {
  source            = "./images/minio"
  target_repository = "${var.target_repository}/minio"
}

module "ml-metadata-store-server" {
  source            = "./images/ml-metadata-store-server"
  target_repository = "${var.target_repository}/ml-metadata-store-server"
}

module "mlflow" {
  source            = "./images/mlflow"
  target_repository = "${var.target_repository}/mlflow"
}

module "mongodb" {
  source            = "./images/mongodb"
  target_repository = "${var.target_repository}/mongodb"
}

module "multus-cni" {
  source            = "./images/multus-cni"
  target_repository = "${var.target_repository}/multus-cni"
}

module "nats" {
  source            = "./images/nats"
  target_repository = "${var.target_repository}/nats"
}

module "nemo" {
  source            = "./images/nemo"
  target_repository = "${var.target_repository}/nemo"
}

module "netcat" {
  source            = "./images/netcat"
  target_repository = "${var.target_repository}/netcat"
}

module "neuvector" {
  source            = "./images/neuvector"
  target_repository = "${var.target_repository}/neuvector"
}

module "newrelic-fluent-bit-output" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-fluent-bit-output"
  target_repository = "${var.target_repository}/newrelic-fluent-bit-output"
}

module "newrelic-infrastructure-bundle" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-infrastructure-bundle"
  target_repository = "${var.target_repository}/newrelic-infrastructure-bundle"
}

module "newrelic-k8s-events-forwarder" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-k8s-events-forwarder"
  target_repository = "${var.target_repository}/newrelic-k8s-events-forwarder"
}

module "newrelic-kube-events" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-kube-events"
  target_repository = "${var.target_repository}/newrelic-kube-events"
}

module "newrelic-kubernetes" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-kubernetes"
  target_repository = "${var.target_repository}/newrelic-kubernetes"
}

module "newrelic-nri-statsd" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-nri-statsd"
  target_repository = "${var.target_repository}/newrelic-nri-statsd"
}

module "newrelic-prometheus" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-prometheus"
  target_repository = "${var.target_repository}/newrelic-prometheus"
}

module "newrelic-prometheus-configurator" {
  license_key       = var.newrelic_license_key
  source            = "./images/newrelic-prometheus-configurator"
  target_repository = "${var.target_repository}/newrelic-prometheus-configurator"
}

module "nfs-subdir-external-provisioner" {
  source            = "./images/nfs-subdir-external-provisioner"
  target_repository = "${var.target_repository}/nfs-subdir-external-provisioner"
}

module "nginx" {
  source            = "./images/nginx"
  target_repository = "${var.target_repository}/nginx"
}

module "node" {
  source            = "./images/node"
  target_repository = "${var.target_repository}/node"
}

module "node-feature-discovery" {
  source            = "./images/node-feature-discovery"
  target_repository = "${var.target_repository}/node-feature-discovery"
}

module "node-lts" {
  source            = "./images/node-lts"
  target_repository = "${var.target_repository}/node-lts"
}

module "node-problem-detector" {
  source            = "./images/node-problem-detector"
  target_repository = "${var.target_repository}/node-problem-detector"
}

module "nodetaint" {
  source            = "./images/nodetaint"
  target_repository = "${var.target_repository}/nodetaint"
}

module "ntia-conformance-checker" {
  source            = "./images/ntia-conformance-checker"
  target_repository = "${var.target_repository}/ntia-conformance-checker"
}

module "ntpd-rs" {
  source            = "./images/ntpd-rs"
  target_repository = "${var.target_repository}/ntpd-rs"
}

module "nvidia-container-toolkit" {
  source            = "./images/nvidia-container-toolkit"
  target_repository = "${var.target_repository}/nvidia-container-toolkit"
}

module "nvidia-device-plugin" {
  source            = "./images/nvidia-device-plugin"
  target_repository = "${var.target_repository}/nvidia-device-plugin"
}

module "nvidia-gpu-driver" {
  source            = "./images/nvidia-gpu-driver"
  target_repository = "${var.target_repository}/nvidia-gpu-driver"
}

module "oauth2-proxy" {
  source            = "./images/oauth2-proxy"
  target_repository = "${var.target_repository}/oauth2-proxy"
}

module "octo-sts" {
  source            = "./images/octo-sts"
  target_repository = "${var.target_repository}/octo-sts"
}

module "openai" {
  source            = "./images/openai"
  target_repository = "${var.target_repository}/openai"
}

module "openscap" {
  source            = "./images/openscap"
  target_repository = "${var.target_repository}/openscap"
}

module "opensearch" {
  source            = "./images/opensearch"
  target_repository = "${var.target_repository}/opensearch"
}

module "opensearch-dashboards" {
  source            = "./images/opensearch-dashboards"
  target_repository = "${var.target_repository}/opensearch-dashboards"
}

module "opentelemetry-collector" {
  source            = "./images/opentelemetry-collector"
  target_repository = "${var.target_repository}/opentelemetry-collector"
}

module "opentelemetry-collector-contrib" {
  source            = "./images/opentelemetry-collector-contrib"
  target_repository = "${var.target_repository}/opentelemetry-collector-contrib"
}

module "opentofu" {
  source            = "./images/opentofu"
  target_repository = "${var.target_repository}/opentofu"
}

module "paranoia" {
  source            = "./images/paranoia"
  target_repository = "${var.target_repository}/paranoia"
}

module "pgbouncer" {
  source            = "./images/pgbouncer"
  target_repository = "${var.target_repository}/pgbouncer"
}

module "php" {
  source            = "./images/php"
  target_repository = "${var.target_repository}/php"
}

module "php-fpm_exporter" {
  source            = "./images/php-fpm_exporter"
  target_repository = "${var.target_repository}/php-fpm_exporter"
}

module "postgres" {
  source            = "./images/postgres"
  target_repository = "${var.target_repository}/postgres"
}

module "postgres-helm-compat" {
  source            = "./images/postgres-helm-compat"
  target_repository = "${var.target_repository}/postgres-helm-compat"
}

module "postgres-operator" {
  source            = "./images/postgres-operator"
  target_repository = "${var.target_repository}/postgres-operator"
}

module "prometheus-adapter" {
  source            = "./images/prometheus-adapter"
  target_repository = "${var.target_repository}/prometheus-adapter"
}

module "prometheus-alertmanager" {
  source            = "./images/prometheus-alertmanager"
  target_repository = "${var.target_repository}/prometheus-alertmanager"
}

module "prometheus-blackbox-exporter" {
  source            = "./images/prometheus-blackbox-exporter"
  target_repository = "${var.target_repository}/prometheus-blackbox-exporter"
}

module "prometheus-cloudwatch-exporter" {
  source            = "./images/prometheus-cloudwatch-exporter"
  target_repository = "${var.target_repository}/prometheus-cloudwatch-exporter"
}

module "prometheus-config-reloader" {
  source            = "./images/prometheus-config-reloader"
  target_repository = "${var.target_repository}/prometheus-config-reloader"
}

module "prometheus-elasticsearch-exporter" {
  source            = "./images/prometheus-elasticsearch-exporter"
  target_repository = "${var.target_repository}/prometheus-elasticsearch-exporter"
}

module "prometheus-logstash-exporter" {
  source            = "./images/prometheus-logstash-exporter"
  target_repository = "${var.target_repository}/prometheus-logstash-exporter"
}

module "prometheus-mongodb-exporter" {
  source            = "./images/prometheus-mongodb-exporter"
  target_repository = "${var.target_repository}/prometheus-mongodb-exporter"
}

module "prometheus-node-exporter" {
  source            = "./images/prometheus-node-exporter"
  target_repository = "${var.target_repository}/prometheus-node-exporter"
}

module "prometheus-operator" {
  source            = "./images/prometheus-operator"
  target_repository = "${var.target_repository}/prometheus-operator"
}

module "prometheus-postgres-exporter" {
  source            = "./images/prometheus-postgres-exporter"
  target_repository = "${var.target_repository}/prometheus-postgres-exporter"
}

module "prometheus-pushgateway-bitnami" {
  source            = "./images/prometheus-pushgateway-bitnami"
  target_repository = "${var.target_repository}/prometheus-pushgateway-bitnami"
}

module "prometheus-redis-exporter" {
  source            = "./images/prometheus-redis-exporter"
  target_repository = "${var.target_repository}/prometheus-redis-exporter"
}

module "prometheus-statsd-exporter" {
  source            = "./images/prometheus-statsd-exporter"
  target_repository = "${var.target_repository}/prometheus-statsd-exporter"
}

module "promtail" {
  source            = "./images/promtail"
  target_repository = "${var.target_repository}/promtail"
}

module "proxysql" {
  source            = "./images/proxysql"
  target_repository = "${var.target_repository}/proxysql"
}

module "pulumi" {
  source            = "./images/pulumi"
  target_repository = "${var.target_repository}/pulumi"
}

module "python" {
  source            = "./images/python"
  target_repository = "${var.target_repository}/python"
}

module "pytorch-cuda12" {
  source            = "./images/pytorch-cuda12"
  target_repository = "${var.target_repository}/pytorch-cuda12"
}

module "qdrant" {
  source            = "./images/qdrant"
  target_repository = "${var.target_repository}/qdrant"
}

module "r-base" {
  source            = "./images/r-base"
  target_repository = "${var.target_repository}/r-base"
}

module "rabbitmq" {
  source            = "./images/rabbitmq"
  target_repository = "${var.target_repository}/rabbitmq"
}

module "rabbitmq-cluster-operator" {
  source            = "./images/rabbitmq-cluster-operator"
  target_repository = "${var.target_repository}/rabbitmq-cluster-operator"
}

module "rabbitmq-default-user-credential-updater" {
  source            = "./images/rabbitmq-default-user-credential-updater"
  target_repository = "${var.target_repository}/rabbitmq-default-user-credential-updater"
}

module "rabbitmq-messaging-topology-operator" {
  source            = "./images/rabbitmq-messaging-topology-operator"
  target_repository = "${var.target_repository}/rabbitmq-messaging-topology-operator"
}

module "redis" {
  source            = "./images/redis"
  target_repository = "${var.target_repository}/redis"
}

module "redis-bitnami" {
  source            = "./images/redis-bitnami"
  target_repository = "${var.target_repository}/redis-bitnami"
}

module "redis-sentinel" {
  source            = "./images/redis-sentinel"
  target_repository = "${var.target_repository}/redis-sentinel"
}

module "rekor" {
  source            = "./images/rekor"
  target_repository = "${var.target_repository}/rekor"
}

module "rqlite" {
  source            = "./images/rqlite"
  target_repository = "${var.target_repository}/rqlite"
}

module "rstudio" {
  source            = "./images/rstudio"
  target_repository = "${var.target_repository}/rstudio"
}

module "ruby" {
  source            = "./images/ruby"
  target_repository = "${var.target_repository}/ruby"
}

module "rust" {
  source            = "./images/rust"
  target_repository = "${var.target_repository}/rust"
}

module "secrets-store-csi-driver" {
  source            = "./images/secrets-store-csi-driver"
  target_repository = "${var.target_repository}/secrets-store-csi-driver"
}

module "secrets-store-csi-driver-provider-gcp" {
  source            = "./images/secrets-store-csi-driver-provider-gcp"
  target_repository = "${var.target_repository}/secrets-store-csi-driver-provider-gcp"
}

module "semgrep" {
  source            = "./images/semgrep"
  target_repository = "${var.target_repository}/semgrep"
}

module "shadowsocks-rust" {
  source            = "./images/shadowsocks-rust"
  target_repository = "${var.target_repository}/shadowsocks-rust"
}

module "sigstore-policy-controller" {
  source            = "./images/sigstore-policy-controller"
  target_repository = "${var.target_repository}/sigstore-policy-controller"
}

module "sigstore-scaffolding" {
  source            = "./images/sigstore-scaffolding"
  target_repository = "${var.target_repository}/sigstore-scaffolding"
}

module "skaffold" {
  source            = "./images/skaffold"
  target_repository = "${var.target_repository}/skaffold"
}

module "smarter-device-manager" {
  source            = "./images/smarter-device-manager"
  target_repository = "${var.target_repository}/smarter-device-manager"
}

module "solr" {
  source            = "./images/solr"
  target_repository = "${var.target_repository}/solr"
}

module "spark-operator" {
  source            = "./images/spark-operator"
  target_repository = "${var.target_repository}/spark-operator"
}

module "spdx-tools" {
  source            = "./images/spdx-tools"
  target_repository = "${var.target_repository}/spdx-tools"
}

module "spire" {
  source            = "./images/spire"
  target_repository = "${var.target_repository}/spire"
}

module "sqlpad" {
  source            = "./images/sqlpad"
  target_repository = "${var.target_repository}/sqlpad"
}

module "squid-proxy" {
  source            = "./images/squid-proxy"
  target_repository = "${var.target_repository}/squid-proxy"
}

module "stakater-reloader" {
  source            = "./images/stakater-reloader"
  target_repository = "${var.target_repository}/stakater-reloader"
}

module "statsd" {
  source            = "./images/statsd"
  target_repository = "${var.target_repository}/statsd"
}

module "step-ca" {
  source            = "./images/step-ca"
  target_repository = "${var.target_repository}/step-ca"
}

module "step-cli" {
  source            = "./images/step-cli"
  target_repository = "${var.target_repository}/step-cli"
}

module "step-issuer" {
  source            = "./images/step-issuer"
  target_repository = "${var.target_repository}/step-issuer"
}

module "stunnel" {
  source            = "./images/stunnel"
  target_repository = "${var.target_repository}/stunnel"
}

module "superset" {
  source            = "./images/superset"
  target_repository = "${var.target_repository}/superset"
}

module "tekton" {
  source            = "./images/tekton"
  target_repository = "${var.target_repository}/tekton"
}

module "telegraf" {
  source            = "./images/telegraf"
  target_repository = "${var.target_repository}/telegraf"
}

module "tempo" {
  source            = "./images/tempo"
  target_repository = "${var.target_repository}/tempo"
}

module "temporal-admin-tools" {
  source            = "./images/temporal-admin-tools"
  target_repository = "${var.target_repository}/temporal-admin-tools"
}

module "temporal-server" {
  source            = "./images/temporal-server"
  target_repository = "${var.target_repository}/temporal-server"
}

module "temporal-ui-server" {
  source            = "./images/temporal-ui-server"
  target_repository = "${var.target_repository}/temporal-ui-server"
}

module "tesseract" {
  source            = "./images/tesseract"
  target_repository = "${var.target_repository}/tesseract"
}

module "thanos" {
  source            = "./images/thanos"
  target_repository = "${var.target_repository}/thanos"
}

module "thanos-operator" {
  source            = "./images/thanos-operator"
  target_repository = "${var.target_repository}/thanos-operator"
}

module "tigera-operator" {
  source            = "./images/tigera-operator"
  target_repository = "${var.target_repository}/tigera-operator"
}

module "timestamp-authority" {
  source            = "./images/timestamp-authority"
  target_repository = "${var.target_repository}/timestamp-authority"
}

module "timoni" {
  source            = "./images/timoni"
  target_repository = "${var.target_repository}/timoni"
}

module "tomcat" {
  source            = "./images/tomcat"
  target_repository = "${var.target_repository}/tomcat"
}

module "traefik" {
  source            = "./images/traefik"
  target_repository = "${var.target_repository}/traefik"
}

module "trillian" {
  source            = "./images/trillian"
  target_repository = "${var.target_repository}/trillian"
}

module "trino" {
  source            = "./images/trino"
  target_repository = "${var.target_repository}/trino"
}

module "trust-manager" {
  source            = "./images/trust-manager"
  target_repository = "${var.target_repository}/trust-manager"
}

module "valkey" {
  source            = "./images/valkey"
  target_repository = "${var.target_repository}/valkey"
}

module "vault" {
  source            = "./images/vault"
  target_repository = "${var.target_repository}/vault"
}

module "vector" {
  source            = "./images/vector"
  target_repository = "${var.target_repository}/vector"
}

module "vela-cli" {
  source            = "./images/vela-cli"
  target_repository = "${var.target_repository}/vela-cli"
}

module "velero" {
  source            = "./images/velero"
  target_repository = "${var.target_repository}/velero"
}

module "velero-plugin-for-aws" {
  source            = "./images/velero-plugin-for-aws"
  target_repository = "${var.target_repository}/velero-plugin-for-aws"
}

module "velero-plugin-for-csi" {
  source            = "./images/velero-plugin-for-csi"
  target_repository = "${var.target_repository}/velero-plugin-for-csi"
}

module "velero-restore-helper" {
  source            = "./images/velero-restore-helper"
  target_repository = "${var.target_repository}/velero-restore-helper"
}

module "vertical-pod-autoscaler" {
  source            = "./images/vertical-pod-autoscaler"
  target_repository = "${var.target_repository}/vertical-pod-autoscaler"
}

module "vt" {
  source            = "./images/vt"
  target_repository = "${var.target_repository}/vt"
}

module "wait-for-it" {
  source            = "./images/wait-for-it"
  target_repository = "${var.target_repository}/wait-for-it"
}

module "wasmer" {
  source            = "./images/wasmer"
  target_repository = "${var.target_repository}/wasmer"
}

module "wasmtime" {
  source            = "./images/wasmtime"
  target_repository = "${var.target_repository}/wasmtime"
}

module "wave" {
  source            = "./images/wave"
  target_repository = "${var.target_repository}/wave"
}

module "wavefront-proxy" {
  source            = "./images/wavefront-proxy"
  target_repository = "${var.target_repository}/wavefront-proxy"
}

module "wazero" {
  source            = "./images/wazero"
  target_repository = "${var.target_repository}/wazero"
}

module "weaviate" {
  source            = "./images/weaviate"
  target_repository = "${var.target_repository}/weaviate"
}

module "wolfi-base" {
  source            = "./images/wolfi-base"
  target_repository = "${var.target_repository}/wolfi-base"
}

module "yara" {
  source            = "./images/yara"
  target_repository = "${var.target_repository}/yara"
}

module "zig" {
  source            = "./images/zig"
  target_repository = "${var.target_repository}/zig"
}

module "zookeeper" {
  source            = "./images/zookeeper"
  target_repository = "${var.target_repository}/zookeeper"
}

module "zot" {
  source            = "./images/zot"
  target_repository = "${var.target_repository}/zot"
}

output "summary_airflow" {
  value = module.airflow.summary
}

output "summary_apache-nifi" {
  value = module.apache-nifi.summary
}

output "summary_apko" {
  value = module.apko.summary
}

output "summary_argo" {
  value = module.argo.summary
}

output "summary_argocd" {
  value = module.argocd.summary
}

output "summary_argocd-extension-installer" {
  value = module.argocd-extension-installer.summary
}

output "summary_aspnet-runtime" {
  value = module.aspnet-runtime.summary
}

output "summary_atlantis" {
  value = module.atlantis.summary
}

output "summary_aws-cli" {
  value = module.aws-cli.summary
}

output "summary_aws-cli-v2" {
  value = module.aws-cli-v2.summary
}

output "summary_aws-ebs-csi-driver" {
  value = module.aws-ebs-csi-driver.summary
}

output "summary_aws-efs-csi-driver" {
  value = module.aws-efs-csi-driver.summary
}

output "summary_aws-for-fluent-bit" {
  value = module.aws-for-fluent-bit.summary
}

output "summary_aws-load-balancer-controller" {
  value = module.aws-load-balancer-controller.summary
}

output "summary_az" {
  value = module.az.summary
}

output "summary_bank-vaults" {
  value = module.bank-vaults.summary
}

output "summary_bash" {
  value = module.bash.summary
}

output "summary_bazel" {
  value = module.bazel.summary
}

output "summary_bincapz" {
  value = module.bincapz.summary
}

output "summary_boring-registry" {
  value = module.boring-registry.summary
}

output "summary_buck2" {
  value = module.buck2.summary
}

output "summary_buildkit" {
  value = module.buildkit.summary
}

output "summary_bun" {
  value = module.bun.summary
}

output "summary_caddy" {
  value = module.caddy.summary
}

output "summary_cadvisor" {
  value = module.cadvisor.summary
}

output "summary_cass-config-builder" {
  value = module.cass-config-builder.summary
}

output "summary_cass-operator" {
  value = module.cass-operator.summary
}

output "summary_cassandra" {
  value = module.cassandra.summary
}

output "summary_cassandra-medusa" {
  value = module.cassandra-medusa.summary
}

output "summary_cassandra-reaper" {
  value = module.cassandra-reaper.summary
}

output "summary_cc-dynamic" {
  value = module.cc-dynamic.summary
}

output "summary_cedar" {
  value = module.cedar.summary
}

output "summary_cert-exporter" {
  value = module.cert-exporter.summary
}

output "summary_cert-manager" {
  value = module.cert-manager.summary
}

output "summary_cert-manager-webhook-pdns" {
  value = module.cert-manager-webhook-pdns.summary
}

output "summary_cfssl" {
  value = module.cfssl.summary
}

output "summary_chromium" {
  value = module.chromium.summary
}

output "summary_cilium" {
  value = module.cilium.summary
}

output "summary_clang" {
  value = module.clang.summary
}

output "summary_clickhouse" {
  value = module.clickhouse.summary
}

output "summary_cluster-autoscaler" {
  value = module.cluster-autoscaler.summary
}

output "summary_cluster-proportional-autoscaler" {
  value = module.cluster-proportional-autoscaler.summary
}

output "summary_conda" {
  value = module.conda.summary
}

output "summary_configmap-reload" {
  value = module.configmap-reload.summary
}

output "summary_confluent-kafka" {
  value = module.confluent-kafka.summary
}

output "summary_consul" {
  value = module.consul.summary
}

output "summary_coredns" {
  value = module.coredns.summary
}

output "summary_cortex" {
  value = module.cortex.summary
}

output "summary_cosign" {
  value = module.cosign.summary
}

output "summary_crane" {
  value = module.crane.summary
}

output "summary_crossplane" {
  value = module.crossplane.summary
}

output "summary_crossplane-aws" {
  value = module.crossplane-aws.summary
}

output "summary_crossplane-azure" {
  value = module.crossplane-azure.summary
}

output "summary_ctlog" {
  value = module.ctlog.summary
}

output "summary_curl" {
  value = module.curl.summary
}

output "summary_dask-gateway" {
  value = module.dask-gateway.summary
}

output "summary_datadog-agent" {
  value = module.datadog-agent.summary
}

output "summary_deno" {
  value = module.deno.summary
}

output "summary_dependency-track" {
  value = module.dependency-track.summary
}

output "summary_dex" {
  value = module.dex.summary
}

output "summary_dive" {
  value = module.dive.summary
}

output "summary_docker-cli" {
  value = module.docker-cli.summary
}

output "summary_docker-selenium" {
  value = module.docker-selenium.summary
}

output "summary_doppler-kubernetes-operator" {
  value = module.doppler-kubernetes-operator.summary
}

output "summary_dotnet" {
  value = module.dotnet.summary
}

output "summary_dragonfly" {
  value = module.dragonfly.summary
}

output "summary_dynamic-localpv-provisioner" {
  value = module.dynamic-localpv-provisioner.summary
}

output "summary_eck-operator" {
  value = module.eck-operator.summary
}

output "summary_envoy" {
  value = module.envoy.summary
}

output "summary_envoy-ratelimit" {
  value = module.envoy-ratelimit.summary
}

output "summary_erlang" {
  value = module.erlang.summary
}

output "summary_etcd" {
  value = module.etcd.summary
}

output "summary_external-dns" {
  value = module.external-dns.summary
}

output "summary_external-secrets" {
  value = module.external-secrets.summary
}

output "summary_falco-no-driver" {
  value = module.falco-no-driver.summary
}

output "summary_falcoctl" {
  value = module.falcoctl.summary
}

output "summary_falcosidekick" {
  value = module.falcosidekick.summary
}

output "summary_ffmpeg" {
  value = module.ffmpeg.summary
}

output "summary_filebeat" {
  value = module.filebeat.summary
}

output "summary_fluent-bit" {
  value = module.fluent-bit.summary
}

output "summary_fluent-bit-plugin-loki" {
  value = module.fluent-bit-plugin-loki.summary
}

output "summary_fluent-operator" {
  value = module.fluent-operator.summary
}

output "summary_fluentd" {
  value = module.fluentd.summary
}

output "summary_flux" {
  value = module.flux.summary
}

output "summary_fulcio" {
  value = module.fulcio.summary
}

output "summary_gatekeeper" {
  value = module.gatekeeper.summary
}

output "summary_gcc-glibc" {
  value = module.gcc-glibc.summary
}

output "summary_gha-runner-scale-set-controller" {
  value = module.gha-runner-scale-set-controller.summary
}

output "summary_gitlab" {
  value = module.gitlab.summary
}

output "summary_gitness" {
  value = module.gitness.summary
}

output "summary_glibc-dynamic" {
  value = module.glibc-dynamic.summary
}

output "summary_go" {
  value = module.go.summary
}

output "summary_go-ipfs" {
  value = module.go-ipfs.summary
}

output "summary_google-cloud-sdk" {
  value = module.google-cloud-sdk.summary
}

output "summary_gptscript" {
  value = module.gptscript.summary
}

output "summary_gpu-feature-discovery" {
  value = module.gpu-feature-discovery.summary
}

output "summary_gradle" {
  value = module.gradle.summary
}

output "summary_grafana" {
  value = module.grafana.summary
}

output "summary_grafana-agent-operator" {
  value = module.grafana-agent-operator.summary
}

output "summary_grafana-mimir" {
  value = module.grafana-mimir.summary
}

output "summary_grafana-operator" {
  value = module.grafana-operator.summary
}

output "summary_grafana-rollout-operator" {
  value = module.grafana-rollout-operator.summary
}

output "summary_grype" {
  value = module.grype.summary
}

output "summary_guacamole-server" {
  value = module.guacamole-server.summary
}

output "summary_haproxy" {
  value = module.haproxy.summary
}

output "summary_haproxy-ingress" {
  value = module.haproxy-ingress.summary
}

output "summary_helm" {
  value = module.helm.summary
}

output "summary_helm-chartmuseum" {
  value = module.helm-chartmuseum.summary
}

output "summary_helm-operator" {
  value = module.helm-operator.summary
}

output "summary_http-echo" {
  value = module.http-echo.summary
}

output "summary_hugo" {
  value = module.hugo.summary
}

output "summary_influxdb" {
  value = module.influxdb.summary
}

output "summary_ingress-nginx-controller" {
  value = module.ingress-nginx-controller.summary
}

output "summary_ip-masq-agent" {
  value = module.ip-masq-agent.summary
}

output "summary_istio" {
  value = module.istio.summary
}

output "summary_jdk" {
  value = module.jdk.summary
}

output "summary_jdk-lts" {
  value = module.jdk-lts.summary
}

output "summary_jellyfin" {
  value = module.jellyfin.summary
}

output "summary_jenkins" {
  value = module.jenkins.summary
}

output "summary_jitsucom-bulker" {
  value = module.jitsucom-bulker.summary
}

output "summary_jitsucom-jitsu" {
  value = module.jitsucom-jitsu.summary
}

output "summary_jre" {
  value = module.jre.summary
}

output "summary_jre-lts" {
  value = module.jre-lts.summary
}

output "summary_k8s-sidecar" {
  value = module.k8s-sidecar.summary
}

output "summary_k8sgpt" {
  value = module.k8sgpt.summary
}

output "summary_k8sgpt-operator" {
  value = module.k8sgpt-operator.summary
}

output "summary_k8ssandra-operator" {
  value = module.k8ssandra-operator.summary
}

output "summary_kafka" {
  value = module.kafka.summary
}

output "summary_karpenter" {
  value = module.karpenter.summary
}

output "summary_keda" {
  value = module.keda.summary
}

output "summary_keycloak" {
  value = module.keycloak.summary
}

output "summary_keycloak-operator" {
  value = module.keycloak-operator.summary
}

output "summary_kibana" {
  value = module.kibana.summary
}

output "summary_ko" {
  value = module.ko.summary
}

output "summary_kor" {
  value = module.kor.summary
}

output "summary_kube-bench" {
  value = module.kube-bench.summary
}

output "summary_kube-downscaler" {
  value = module.kube-downscaler.summary
}

output "summary_kube-fluentd-operator" {
  value = module.kube-fluentd-operator.summary
}

output "summary_kube-logging-operator" {
  value = module.kube-logging-operator.summary
}

output "summary_kube-logging-operator-fluentd" {
  value = module.kube-logging-operator-fluentd.summary
}

output "summary_kube-state-metrics" {
  value = module.kube-state-metrics.summary
}

output "summary_kube-vip" {
  value = module.kube-vip.summary
}

output "summary_kube-webhook-certgen" {
  value = module.kube-webhook-certgen.summary
}

output "summary_kubectl" {
  value = module.kubectl.summary
}

output "summary_kubeflow-centraldashboard" {
  value = module.kubeflow-centraldashboard.summary
}

output "summary_kubeflow-pipelines" {
  value = module.kubeflow-pipelines.summary
}

output "summary_kubeflow-pipelines-visualization-server" {
  value = module.kubeflow-pipelines-visualization-server.summary
}

output "summary_kuberay-operator" {
  value = module.kuberay-operator.summary
}

output "summary_kubernetes-autoscaler-addon-resizer" {
  value = module.kubernetes-autoscaler-addon-resizer.summary
}

output "summary_kubernetes-csi-external-attacher" {
  value = module.kubernetes-csi-external-attacher.summary
}

output "summary_kubernetes-csi-external-provisioner" {
  value = module.kubernetes-csi-external-provisioner.summary
}

output "summary_kubernetes-csi-external-resizer" {
  value = module.kubernetes-csi-external-resizer.summary
}

output "summary_kubernetes-csi-external-snapshot-controller" {
  value = module.kubernetes-csi-external-snapshot-controller.summary
}

output "summary_kubernetes-csi-external-snapshot-validation-webhook" {
  value = module.kubernetes-csi-external-snapshot-validation-webhook.summary
}

output "summary_kubernetes-csi-external-snapshotter" {
  value = module.kubernetes-csi-external-snapshotter.summary
}

output "summary_kubernetes-csi-livenessprobe" {
  value = module.kubernetes-csi-livenessprobe.summary
}

output "summary_kubernetes-csi-node-driver-registrar" {
  value = module.kubernetes-csi-node-driver-registrar.summary
}

output "summary_kubernetes-dashboard" {
  value = module.kubernetes-dashboard.summary
}

output "summary_kubernetes-dns-node-cache" {
  value = module.kubernetes-dns-node-cache.summary
}

output "summary_kubernetes-event-exporter" {
  value = module.kubernetes-event-exporter.summary
}

output "summary_kubernetes-ingress-defaultbackend" {
  value = module.kubernetes-ingress-defaultbackend.summary
}

output "summary_kubewatch" {
  value = module.kubewatch.summary
}

output "summary_kyverno" {
  value = module.kyverno.summary
}

output "summary_kyverno-policy-reporter" {
  value = module.kyverno-policy-reporter.summary
}

output "summary_laravel" {
  value = module.laravel.summary
}

output "summary_litestream" {
  value = module.litestream.summary
}

output "summary_local-volume-node-cleanup" {
  value = module.local-volume-node-cleanup.summary
}

output "summary_local-volume-provisioner" {
  value = module.local-volume-provisioner.summary
}

output "summary_logstash-oss-with-opensearch-output-plugin" {
  value = module.logstash-oss-with-opensearch-output-plugin.summary
}

output "summary_loki" {
  value = module.loki.summary
}

output "summary_management-api-for-apache-cassandra" {
  value = module.management-api-for-apache-cassandra.summary
}

output "summary_mariadb" {
  value = module.mariadb.summary
}

output "summary_mdbook" {
  value = module.mdbook.summary
}

output "summary_meilisearch" {
  value = module.meilisearch.summary
}

output "summary_melange" {
  value = module.melange.summary
}

output "summary_memcached" {
  value = module.memcached.summary
}

output "summary_memcached-exporter" {
  value = module.memcached-exporter.summary
}

output "summary_memcached-exporter-bitnami" {
  value = module.memcached-exporter-bitnami.summary
}

output "summary_metacontroller" {
  value = module.metacontroller.summary
}

output "summary_metallb" {
  value = module.metallb.summary
}

output "summary_metrics-server" {
  value = module.metrics-server.summary
}

output "summary_min-toolkit-debug" {
  value = module.min-toolkit-debug.summary
}

output "summary_minio" {
  value = module.minio.summary
}

output "summary_ml-metadata-store-server" {
  value = module.ml-metadata-store-server.summary
}

output "summary_mlflow" {
  value = module.mlflow.summary
}

output "summary_mongodb" {
  value = module.mongodb.summary
}

output "summary_multus-cni" {
  value = module.multus-cni.summary
}

output "summary_nats" {
  value = module.nats.summary
}

output "summary_nemo" {
  value = module.nemo.summary
}

output "summary_netcat" {
  value = module.netcat.summary
}

output "summary_neuvector" {
  value = module.neuvector.summary
}

output "summary_newrelic-fluent-bit-output" {
  value = module.newrelic-fluent-bit-output.summary
}

output "summary_newrelic-infrastructure-bundle" {
  value = module.newrelic-infrastructure-bundle.summary
}

output "summary_newrelic-k8s-events-forwarder" {
  value = module.newrelic-k8s-events-forwarder.summary
}

output "summary_newrelic-kube-events" {
  value = module.newrelic-kube-events.summary
}

output "summary_newrelic-kubernetes" {
  value = module.newrelic-kubernetes.summary
}

output "summary_newrelic-nri-statsd" {
  value = module.newrelic-nri-statsd.summary
}

output "summary_newrelic-prometheus" {
  value = module.newrelic-prometheus.summary
}

output "summary_newrelic-prometheus-configurator" {
  value = module.newrelic-prometheus-configurator.summary
}

output "summary_nfs-subdir-external-provisioner" {
  value = module.nfs-subdir-external-provisioner.summary
}

output "summary_nginx" {
  value = module.nginx.summary
}

output "summary_node" {
  value = module.node.summary
}

output "summary_node-feature-discovery" {
  value = module.node-feature-discovery.summary
}

output "summary_node-lts" {
  value = module.node-lts.summary
}

output "summary_node-problem-detector" {
  value = module.node-problem-detector.summary
}

output "summary_nodetaint" {
  value = module.nodetaint.summary
}

output "summary_ntia-conformance-checker" {
  value = module.ntia-conformance-checker.summary
}

output "summary_ntpd-rs" {
  value = module.ntpd-rs.summary
}

output "summary_nvidia-container-toolkit" {
  value = module.nvidia-container-toolkit.summary
}

output "summary_nvidia-device-plugin" {
  value = module.nvidia-device-plugin.summary
}

output "summary_nvidia-gpu-driver" {
  value = module.nvidia-gpu-driver.summary
}

output "summary_oauth2-proxy" {
  value = module.oauth2-proxy.summary
}

output "summary_octo-sts" {
  value = module.octo-sts.summary
}

output "summary_openai" {
  value = module.openai.summary
}

output "summary_openscap" {
  value = module.openscap.summary
}

output "summary_opensearch" {
  value = module.opensearch.summary
}

output "summary_opensearch-dashboards" {
  value = module.opensearch-dashboards.summary
}

output "summary_opentelemetry-collector" {
  value = module.opentelemetry-collector.summary
}

output "summary_opentelemetry-collector-contrib" {
  value = module.opentelemetry-collector-contrib.summary
}

output "summary_opentofu" {
  value = module.opentofu.summary
}

output "summary_paranoia" {
  value = module.paranoia.summary
}

output "summary_pgbouncer" {
  value = module.pgbouncer.summary
}

output "summary_php" {
  value = module.php.summary
}

output "summary_php-fpm_exporter" {
  value = module.php-fpm_exporter.summary
}

output "summary_postgres" {
  value = module.postgres.summary
}

output "summary_postgres-helm-compat" {
  value = module.postgres-helm-compat.summary
}

output "summary_postgres-operator" {
  value = module.postgres-operator.summary
}

output "summary_prometheus-adapter" {
  value = module.prometheus-adapter.summary
}

output "summary_prometheus-alertmanager" {
  value = module.prometheus-alertmanager.summary
}

output "summary_prometheus-blackbox-exporter" {
  value = module.prometheus-blackbox-exporter.summary
}

output "summary_prometheus-cloudwatch-exporter" {
  value = module.prometheus-cloudwatch-exporter.summary
}

output "summary_prometheus-config-reloader" {
  value = module.prometheus-config-reloader.summary
}

output "summary_prometheus-elasticsearch-exporter" {
  value = module.prometheus-elasticsearch-exporter.summary
}

output "summary_prometheus-logstash-exporter" {
  value = module.prometheus-logstash-exporter.summary
}

output "summary_prometheus-mongodb-exporter" {
  value = module.prometheus-mongodb-exporter.summary
}

output "summary_prometheus-node-exporter" {
  value = module.prometheus-node-exporter.summary
}

output "summary_prometheus-operator" {
  value = module.prometheus-operator.summary
}

output "summary_prometheus-postgres-exporter" {
  value = module.prometheus-postgres-exporter.summary
}

output "summary_prometheus-pushgateway-bitnami" {
  value = module.prometheus-pushgateway-bitnami.summary
}

output "summary_prometheus-redis-exporter" {
  value = module.prometheus-redis-exporter.summary
}

output "summary_prometheus-statsd-exporter" {
  value = module.prometheus-statsd-exporter.summary
}

output "summary_promtail" {
  value = module.promtail.summary
}

output "summary_proxysql" {
  value = module.proxysql.summary
}

output "summary_pulumi" {
  value = module.pulumi.summary
}

output "summary_python" {
  value = module.python.summary
}

output "summary_pytorch-cuda12" {
  value = module.pytorch-cuda12.summary
}

output "summary_qdrant" {
  value = module.qdrant.summary
}

output "summary_r-base" {
  value = module.r-base.summary
}

output "summary_rabbitmq" {
  value = module.rabbitmq.summary
}

output "summary_rabbitmq-cluster-operator" {
  value = module.rabbitmq-cluster-operator.summary
}

output "summary_rabbitmq-default-user-credential-updater" {
  value = module.rabbitmq-default-user-credential-updater.summary
}

output "summary_rabbitmq-messaging-topology-operator" {
  value = module.rabbitmq-messaging-topology-operator.summary
}

output "summary_redis" {
  value = module.redis.summary
}

output "summary_redis-bitnami" {
  value = module.redis-bitnami.summary
}

output "summary_redis-sentinel" {
  value = module.redis-sentinel.summary
}

output "summary_rekor" {
  value = module.rekor.summary
}

output "summary_rqlite" {
  value = module.rqlite.summary
}

output "summary_rstudio" {
  value = module.rstudio.summary
}

output "summary_ruby" {
  value = module.ruby.summary
}

output "summary_rust" {
  value = module.rust.summary
}

output "summary_secrets-store-csi-driver" {
  value = module.secrets-store-csi-driver.summary
}

output "summary_secrets-store-csi-driver-provider-gcp" {
  value = module.secrets-store-csi-driver-provider-gcp.summary
}

output "summary_semgrep" {
  value = module.semgrep.summary
}

output "summary_shadowsocks-rust" {
  value = module.shadowsocks-rust.summary
}

output "summary_sigstore-policy-controller" {
  value = module.sigstore-policy-controller.summary
}

output "summary_sigstore-scaffolding" {
  value = module.sigstore-scaffolding.summary
}

output "summary_skaffold" {
  value = module.skaffold.summary
}

output "summary_smarter-device-manager" {
  value = module.smarter-device-manager.summary
}

output "summary_solr" {
  value = module.solr.summary
}

output "summary_spark-operator" {
  value = module.spark-operator.summary
}

output "summary_spdx-tools" {
  value = module.spdx-tools.summary
}

output "summary_spire" {
  value = module.spire.summary
}

output "summary_sqlpad" {
  value = module.sqlpad.summary
}

output "summary_squid-proxy" {
  value = module.squid-proxy.summary
}

output "summary_stakater-reloader" {
  value = module.stakater-reloader.summary
}

output "summary_statsd" {
  value = module.statsd.summary
}

output "summary_step-ca" {
  value = module.step-ca.summary
}

output "summary_step-cli" {
  value = module.step-cli.summary
}

output "summary_step-issuer" {
  value = module.step-issuer.summary
}

output "summary_stunnel" {
  value = module.stunnel.summary
}

output "summary_superset" {
  value = module.superset.summary
}

output "summary_tekton" {
  value = module.tekton.summary
}

output "summary_telegraf" {
  value = module.telegraf.summary
}

output "summary_tempo" {
  value = module.tempo.summary
}

output "summary_temporal-admin-tools" {
  value = module.temporal-admin-tools.summary
}

output "summary_temporal-server" {
  value = module.temporal-server.summary
}

output "summary_temporal-ui-server" {
  value = module.temporal-ui-server.summary
}

output "summary_tesseract" {
  value = module.tesseract.summary
}

output "summary_thanos" {
  value = module.thanos.summary
}

output "summary_thanos-operator" {
  value = module.thanos-operator.summary
}

output "summary_tigera-operator" {
  value = module.tigera-operator.summary
}

output "summary_timestamp-authority" {
  value = module.timestamp-authority.summary
}

output "summary_timoni" {
  value = module.timoni.summary
}

output "summary_tomcat" {
  value = module.tomcat.summary
}

output "summary_traefik" {
  value = module.traefik.summary
}

output "summary_trillian" {
  value = module.trillian.summary
}

output "summary_trino" {
  value = module.trino.summary
}

output "summary_trust-manager" {
  value = module.trust-manager.summary
}

output "summary_valkey" {
  value = module.valkey.summary
}

output "summary_vault" {
  value = module.vault.summary
}

output "summary_vector" {
  value = module.vector.summary
}

output "summary_vela-cli" {
  value = module.vela-cli.summary
}

output "summary_velero" {
  value = module.velero.summary
}

output "summary_velero-plugin-for-aws" {
  value = module.velero-plugin-for-aws.summary
}

output "summary_velero-plugin-for-csi" {
  value = module.velero-plugin-for-csi.summary
}

output "summary_velero-restore-helper" {
  value = module.velero-restore-helper.summary
}

output "summary_vertical-pod-autoscaler" {
  value = module.vertical-pod-autoscaler.summary
}

output "summary_vt" {
  value = module.vt.summary
}

output "summary_wait-for-it" {
  value = module.wait-for-it.summary
}

output "summary_wasmer" {
  value = module.wasmer.summary
}

output "summary_wasmtime" {
  value = module.wasmtime.summary
}

output "summary_wave" {
  value = module.wave.summary
}

output "summary_wavefront-proxy" {
  value = module.wavefront-proxy.summary
}

output "summary_wazero" {
  value = module.wazero.summary
}

output "summary_weaviate" {
  value = module.weaviate.summary
}

output "summary_wolfi-base" {
  value = module.wolfi-base.summary
}

output "summary_yara" {
  value = module.yara.summary
}

output "summary_zig" {
  value = module.zig.summary
}

output "summary_zookeeper" {
  value = module.zookeeper.summary
}

output "summary_zot" {
  value = module.zot.summary
}

